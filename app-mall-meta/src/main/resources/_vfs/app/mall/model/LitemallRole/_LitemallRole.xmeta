<?xml version="1.0" encoding="UTF-8" ?>
<meta x:schema="/nop/schema/xmeta.xdef" xmlns:x="/nop/schema/xdsl.xdef" xmlns:i18n-en="i18n-en" xmlns:ext="ext"
      xmlns:xpl="xpl" ext:model="orm" xmlns:c="c" xmlns:graphql="graphql" xmlns:meta-gen="meta-gen" xmlns:biz="biz"
      displayName="角色表" xmlns:ui="ui" xmlns:orm="orm">

    <entityName>app.mall.dao.entity.LitemallRole</entityName>

    <primaryKey>id</primaryKey>

    <x:gen-extends>
        <meta-gen:DefaultMetaGenExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:gen-extends>

    <x:post-extends>
        <meta-gen:DefaultMetaPostExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:post-extends>

    <keys/>

    <props>
        <prop name="id" displayName="Id" propId="1" mandatory="true" queryable="true" sortable="true" insertable="true"
              updatable="false">
            <schema type="java.lang.Integer"/>
        </prop>
        <prop name="name" displayName="角色名称" propId="2" mandatory="true" queryable="true" sortable="true"
              insertable="true" updatable="true">
            <schema type="java.lang.String" precision="63"/>
        </prop>
        <prop name="desc" displayName="角色描述" propId="3" queryable="true" sortable="true" insertable="true"
              updatable="true">
            <schema type="java.lang.String" precision="1023"/>
        </prop>
        <prop name="enabled" displayName="是否启用" propId="4" queryable="true" sortable="true" insertable="true"
              updatable="true">
            <schema type="java.lang.Boolean"/>
        </prop>
        <prop name="addTime" displayName="创建时间" propId="5" queryable="true" sortable="true" insertable="true"
              updatable="true" internal="true" ui:show="X">
            <schema type="java.time.LocalDateTime"/>
        </prop>
        <prop name="updateTime" displayName="更新时间" propId="6" queryable="true" sortable="true" insertable="true"
              updatable="true" internal="true" ui:show="X">
            <schema type="java.time.LocalDateTime"/>
        </prop>
        <prop name="deleted" displayName="逻辑删除" propId="7" queryable="true" sortable="true" insertable="true"
              updatable="true" internal="true" ui:show="X">
            <schema type="java.lang.Boolean"/>
        </prop>
        <prop name="userMappings" tagSet="pub,cascade-delete,insertable,updatable" ext:kind="to-many" internal="true"
              ext:joinLeftProp="id" ext:joinRightProp="roleId" orm:manyToManyRefProp="userId" insertable="true"
              updatable="true" lazy="true">
            <schema>
                <item bizObjName="LitemallUserRole"/>
            </schema>
        </prop>
        <prop name="relatedUserList" displayName="relatedUserList" insertable="true" updatable="true"
              depends="~userMappings" internal="true" lazy="true">
            <schema>
                <item bizObjName="LitemallUser"/>
            </schema>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefProps(
                                entity.getUserMappings(), "user");
                        </getter>
        </prop>
        <prop name="relatedUserList_ids" displayName="relatedUserList" insertable="true" updatable="true"
              graphql:labelProp="relatedUserList_label" lazy="true"
              ui:pickerUrl="/app/mall/pages/LitemallUser/picker.page.yaml" ui:refLabelProp="id" internal="true"
              depends="~userMappings">
            <schema type="List&lt;String&gt;" domain="ref-ids"/>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefIds(
                                entity.getUserMappings(), "user");
                        </getter>
            <setter>
                            import io.nop.orm.support.OrmEntityHelper;
                            OrmEntityHelper.setRefIds(
                                entity.getUserMappings(), "user",value);
                        </setter>
        </prop>
        <prop name="relatedUserList_label" displayName="relatedUserList" internal="true" depends="~userMappings"
              lazy="true">
            <schema type="String"/>
            <getter>
                    import io.nop.orm.support.OrmEntityHelper;
                    return OrmEntityHelper.getLabelForRefProps(
                        entity.getUserMappings(), "user");
                </getter>
        </prop>
    </props>
</meta>