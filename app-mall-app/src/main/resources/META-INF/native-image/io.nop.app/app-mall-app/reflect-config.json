[
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.AppMallDaoConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_STATUS_APPROVED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_STATUS_CANCELLED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_STATUS_INIT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_STATUS_REFUND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_STATUS_REJECT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_STATUS_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_TYPE_GOODS_MISS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_TYPE_GOODS_NEEDLESS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AFTERSALE_TYPE_GOODS_REQUIRED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CATEGORY_LEVEL_L1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CATEGORY_LEVEL_L2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_AUTO_CANCEL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_AUTO_CONFIRM"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_CANCEL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_CONFIRM"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_CREATED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_GROUPON_EXPIRED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_PAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_REFUND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_REFUND_CONFIRM"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ORDER_STATUS_SHIP"
      }
    ],
    "methods": [],
    "name": "app.mall.dao._AppMallDaoConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallAd",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallAddress",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallAdmin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallAftersale",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallBrand",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallCart",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallCategory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallCollect",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallComment",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallCoupon",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallCouponUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallFeedback",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallFootprint",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKeywordsList",
        "parameterTypes": []
      },
      {
        "name": "setKeywordsList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "syncRetailPrice",
        "parameterTypes": []
      }
    ],
    "name": "app.mall.dao.entity.LitemallGoods",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallGoodsAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallGoodsProduct",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallGoodsSpecification",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallGroupon",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallGrouponRules",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallIssue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallKeyword",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallNotice",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallNoticeAdmin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallOrder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallOrderGoods",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallPermission",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallRegion",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallSearchHistory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallStorage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallSystem",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallTopic",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.dao.entity.LitemallUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "app.mall.dao.entity.LitemallUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_enabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_link"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_position"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_enabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_link"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_position"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPosition",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPosition",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallAd",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addressDetail"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_areaCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_city"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_county"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isDefault"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_postalCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_province"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addressDetail"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_areaCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_city"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_county"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isDefault"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_postalCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_province"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAddressDetail",
        "parameterTypes": []
      },
      {
        "name": "getAreaCode",
        "parameterTypes": []
      },
      {
        "name": "getCity",
        "parameterTypes": []
      },
      {
        "name": "getCounty",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIsDefault",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPostalCode",
        "parameterTypes": []
      },
      {
        "name": "getProvince",
        "parameterTypes": []
      },
      {
        "name": "getTel",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAddressDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAreaCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCounty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIsDefault",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPostalCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvince",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallAddress",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastLoginIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastLoginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_username"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastLoginIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastLoginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_username"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAvatar",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLastLoginIp",
        "parameterTypes": []
      },
      {
        "name": "getLastLoginTime",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRoleIds",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLastLoginIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastLoginTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleIds",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallAdmin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_aftersaleSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_amount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_handleTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pictures"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_reason"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_aftersaleSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_amount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_handleTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_order"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pictures"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picturesComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_reason"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAftersaleSn",
        "parameterTypes": []
      },
      {
        "name": "getAmount",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getHandleTime",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getOrderId",
        "parameterTypes": []
      },
      {
        "name": "getPictures",
        "parameterTypes": []
      },
      {
        "name": "getPicturesComponent",
        "parameterTypes": []
      },
      {
        "name": "getReason",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAftersaleSn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAmount",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHandleTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallOrder"
        ]
      },
      {
        "name": "setOrderId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPictures",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallAftersale",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_floorPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_floorPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getFloorPrice",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getSortOrder",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFloorPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortOrder",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallBrand",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checked"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_number"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_productId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checked"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_number"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_productId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getChecked",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getGoodsName",
        "parameterTypes": []
      },
      {
        "name": "getGoodsSn",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getNumber",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getPrice",
        "parameterTypes": []
      },
      {
        "name": "getProductId",
        "parameterTypes": []
      },
      {
        "name": "getSpecifications",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setChecked",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setGoodsName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGoodsSn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNumber",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setProductId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSpecifications",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallCart",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_iconUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keywords"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_level"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_iconUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keywords"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_level"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getIconUrl",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getKeywords",
        "parameterTypes": []
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getPid",
        "parameterTypes": []
      },
      {
        "name": "getSortOrder",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIconUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeywords",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallCategory"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPid",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSortOrder",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallCategory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_valueId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_valueId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getValueId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValueId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallCollect",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_adminContent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_hasPicture"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrls"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_star"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_valueId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_adminContent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_hasPicture"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrls"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrlsComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_star"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_valueId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAdminContent",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getHasPicture",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getPicUrls",
        "parameterTypes": []
      },
      {
        "name": "getPicUrlsComponent",
        "parameterTypes": []
      },
      {
        "name": "getStar",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getValueId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAdminContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPicture",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPicUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStar",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValueId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallComment",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_code"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_days"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_discount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_limit"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_min"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_total"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_code"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_days"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_discount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_limit"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_min"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_total"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDays",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getDiscount",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getGoodsType",
        "parameterTypes": []
      },
      {
        "name": "getGoodsValue",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": []
      },
      {
        "name": "getTimeType",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDays",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDiscount",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setGoodsType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setGoodsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallCoupon",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_couponId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_coupon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_couponId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getCoupon",
        "parameterTypes": []
      },
      {
        "name": "getCouponId",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getOrderId",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUsedTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCoupon",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallCoupon"
        ]
      },
      {
        "name": "setCouponId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOrderId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUsedTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallCouponUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_feedType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_hasPicture"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mobile"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrls"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_username"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_feedType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_hasPicture"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mobile"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrls"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrlsComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_username"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getFeedType",
        "parameterTypes": []
      },
      {
        "name": "getHasPicture",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMobile",
        "parameterTypes": []
      },
      {
        "name": "getPicUrls",
        "parameterTypes": []
      },
      {
        "name": "getPicUrlsComponent",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFeedType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasPicture",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMobile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPicUrls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallFeedback",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallFootprint",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_brandId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_brief"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_categoryId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_counterPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_detail"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_gallery"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isHot"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isNew"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isOnSale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keywords"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_retailPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_shareUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_unit"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_attributes"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_brand"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_brandId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_brief"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_category"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_categoryId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_counterPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_detail"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_gallery"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_galleryComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isHot"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isNew"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isOnSale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keywords"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderGoods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_products"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_retailPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_shareUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_unit"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "getBrand",
        "parameterTypes": []
      },
      {
        "name": "getBrandId",
        "parameterTypes": []
      },
      {
        "name": "getBrief",
        "parameterTypes": []
      },
      {
        "name": "getCategory",
        "parameterTypes": []
      },
      {
        "name": "getCategoryId",
        "parameterTypes": []
      },
      {
        "name": "getCounterPrice",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getDetail",
        "parameterTypes": []
      },
      {
        "name": "getGallery",
        "parameterTypes": []
      },
      {
        "name": "getGalleryComponent",
        "parameterTypes": []
      },
      {
        "name": "getGoodsSn",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIsHot",
        "parameterTypes": []
      },
      {
        "name": "getIsNew",
        "parameterTypes": []
      },
      {
        "name": "getIsOnSale",
        "parameterTypes": []
      },
      {
        "name": "getKeywords",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrderGoods",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getProducts",
        "parameterTypes": []
      },
      {
        "name": "getRelatedProductIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedProductList",
        "parameterTypes": []
      },
      {
        "name": "getRetailPrice",
        "parameterTypes": []
      },
      {
        "name": "getShareUrl",
        "parameterTypes": []
      },
      {
        "name": "getSortOrder",
        "parameterTypes": []
      },
      {
        "name": "getSpecifications",
        "parameterTypes": []
      },
      {
        "name": "getUnit",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setBrand",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallBrand"
        ]
      },
      {
        "name": "setBrandId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBrief",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCategory",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallCategory"
        ]
      },
      {
        "name": "setCategoryId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCounterPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGallery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGoodsSn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIsHot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsNew",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsOnSale",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKeywords",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedProductIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRetailPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setShareUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortOrder",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUnit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallGoods",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_attribute"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_attribute"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAttribute",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallGoodsAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_number"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_number"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_specificationsComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getNumber",
        "parameterTypes": []
      },
      {
        "name": "getPrice",
        "parameterTypes": []
      },
      {
        "name": "getSpecifications",
        "parameterTypes": []
      },
      {
        "name": "getSpecificationsComponent",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNumber",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setSpecifications",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallGoodsProduct",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_specification"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_specification"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getSpecification",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSpecification",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallGoodsSpecification",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_creatorUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_creatorUserTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_grouponId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_rulesId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_shareUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_creatorUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_creatorUserTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_grouponId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_order"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_rulesId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_shareUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatorUserId",
        "parameterTypes": []
      },
      {
        "name": "getCreatorUserTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGrouponId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getOrderId",
        "parameterTypes": []
      },
      {
        "name": "getRulesId",
        "parameterTypes": []
      },
      {
        "name": "getShareUrl",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCreatorUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCreatorUserTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGrouponId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallOrder"
        ]
      },
      {
        "name": "setOrderId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRulesId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShareUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallGroupon",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_discount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_discountMember"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_discount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_discountMember"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getDiscount",
        "parameterTypes": []
      },
      {
        "name": "getDiscountMember",
        "parameterTypes": []
      },
      {
        "name": "getExpireTime",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getGoodsName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDiscount",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDiscountMember",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExpireTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setGoodsName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallGrouponRules",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_answer"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_question"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_answer"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_question"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAnswer",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getQuestion",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAnswer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setQuestion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallIssue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isDefault"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isHot"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keyword"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isDefault"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isHot"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keyword"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIsDefault",
        "parameterTypes": []
      },
      {
        "name": "getIsHot",
        "parameterTypes": []
      },
      {
        "name": "getKeyword",
        "parameterTypes": []
      },
      {
        "name": "getSortOrder",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIsDefault",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsHot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallKeyword",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_action"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_admin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ip"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_result"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_action"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_admin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ip"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_result"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAction",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAdmin",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIp",
        "parameterTypes": []
      },
      {
        "name": "getResult",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAdmin",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_adminId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_adminId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAdminId",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAdminId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallNotice",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_adminId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_noticeId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_noticeTitle"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_readTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_adminId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_noticeId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_noticeTitle"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_readTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAdminId",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getNoticeId",
        "parameterTypes": []
      },
      {
        "name": "getNoticeTitle",
        "parameterTypes": []
      },
      {
        "name": "getReadTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAdminId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoticeId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoticeTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallNoticeAdmin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actualPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_address"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_aftersaleStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_comments"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_confirmTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_consignee"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_couponPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_freightPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_grouponPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_integralPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_message"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mobile"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_payId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_payTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refundAmount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refundContent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refundTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refundType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_shipChannel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_shipSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_shipTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actualPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_address"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_aftersaleStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_comments"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_confirmTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_consignee"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_couponPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_freightPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_grouponPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_integralPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_message"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mobile"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderGoods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderPrice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_payId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_payTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refundAmount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refundContent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refundTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refundType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_shipChannel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_shipSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_shipTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getActualPrice",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getAftersaleStatus",
        "parameterTypes": []
      },
      {
        "name": "getComments",
        "parameterTypes": []
      },
      {
        "name": "getConfirmTime",
        "parameterTypes": []
      },
      {
        "name": "getConsignee",
        "parameterTypes": []
      },
      {
        "name": "getCouponPrice",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getFreightPrice",
        "parameterTypes": []
      },
      {
        "name": "getGoodsPrice",
        "parameterTypes": []
      },
      {
        "name": "getGrouponPrice",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIntegralPrice",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getMobile",
        "parameterTypes": []
      },
      {
        "name": "getOrderGoods",
        "parameterTypes": []
      },
      {
        "name": "getOrderPrice",
        "parameterTypes": []
      },
      {
        "name": "getOrderSn",
        "parameterTypes": []
      },
      {
        "name": "getOrderStatus",
        "parameterTypes": []
      },
      {
        "name": "getPayId",
        "parameterTypes": []
      },
      {
        "name": "getPayTime",
        "parameterTypes": []
      },
      {
        "name": "getRefundAmount",
        "parameterTypes": []
      },
      {
        "name": "getRefundContent",
        "parameterTypes": []
      },
      {
        "name": "getRefundTime",
        "parameterTypes": []
      },
      {
        "name": "getRefundType",
        "parameterTypes": []
      },
      {
        "name": "getRelatedProductIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedProductList",
        "parameterTypes": []
      },
      {
        "name": "getShipChannel",
        "parameterTypes": []
      },
      {
        "name": "getShipSn",
        "parameterTypes": []
      },
      {
        "name": "getShipTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setActualPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAftersaleStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setComments",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setConfirmTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setConsignee",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCouponPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setFreightPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setGoodsPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setGrouponPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIntegralPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMobile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setOrderSn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderStatus",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setPayId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPayTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRefundAmount",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setRefundContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefundTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRefundType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedProductIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShipChannel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShipSn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShipTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallOrder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goodsSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_number"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_productId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsSn"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_number"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_order"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_product"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_productId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_specifications"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsId",
        "parameterTypes": []
      },
      {
        "name": "getGoodsName",
        "parameterTypes": []
      },
      {
        "name": "getGoodsSn",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getNumber",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getOrderId",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getPrice",
        "parameterTypes": []
      },
      {
        "name": "getProduct",
        "parameterTypes": []
      },
      {
        "name": "getProductId",
        "parameterTypes": []
      },
      {
        "name": "getSpecifications",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoods"
        ]
      },
      {
        "name": "setGoodsId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setGoodsName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGoodsSn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNumber",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallOrder"
        ]
      },
      {
        "name": "setOrderId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setProduct",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallGoodsProduct"
        ]
      },
      {
        "name": "setProductId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSpecifications",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallOrderGoods",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_permission"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_permission"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getPermission",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPermission",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallPermission",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_code"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_code"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getPid",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallRegion"
        ]
      },
      {
        "name": "setPid",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallRegion",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_enabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_desc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_enabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userMappings"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList_label",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUserMappings",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedUserIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_from"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keyword"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_from"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keyword"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getFrom",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getKeyword",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallSearchHistory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_key"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_size"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_key"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_size"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_type"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getKey",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallStorage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keyName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keyValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keyName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keyValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getKeyName",
        "parameterTypes": []
      },
      {
        "name": "getKeyValue",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeyName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallSystem",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_readCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_subtitle"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goods"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_goodsComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_picUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_price"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_readCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_subtitle"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGoods",
        "parameterTypes": []
      },
      {
        "name": "getGoodsComponent",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getPicUrl",
        "parameterTypes": []
      },
      {
        "name": "getPrice",
        "parameterTypes": []
      },
      {
        "name": "getReadCount",
        "parameterTypes": []
      },
      {
        "name": "getSortOrder",
        "parameterTypes": []
      },
      {
        "name": "getSubtitle",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGoods",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPicUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrice",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setReadCount",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubtitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallTopic",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastLoginIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastLoginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mobile"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nickname"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userLevel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_username"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_weixinOpenid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastLoginIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastLoginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mobile"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nickname"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userLevel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_username"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_weixinOpenid"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getAvatar",
        "parameterTypes": []
      },
      {
        "name": "getBirthday",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getGender",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLastLoginIp",
        "parameterTypes": []
      },
      {
        "name": "getLastLoginTime",
        "parameterTypes": []
      },
      {
        "name": "getMobile",
        "parameterTypes": []
      },
      {
        "name": "getNickname",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getSessionKey",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUserLevel",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getWeixinOpenid",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBirthday",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setGender",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLastLoginIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastLoginTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setMobile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSessionKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUserLevel",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWeixinOpenid",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.dao.entity._gen._LitemallUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG_TYPE_AUTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG_TYPE_GENERAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG_TYPE_ORDER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG_TYPE_OTHER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "dao",
        "parameterTypes": []
      },
      {
        "name": "logAdmin",
        "parameterTypes": [
          "java.lang.Integer",
          "java.lang.String",
          "java.lang.Boolean",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logAuthFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logAuthSucceed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logAuthSucceed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logGeneralFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logGeneralSucceed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logGeneralSucceed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logOrderFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logOrderSucceed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logOrderSucceed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logOtherFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logOtherSucceed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logOtherSucceed",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.dao.manager.MallLogManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "extAction2",
        "parameterTypes": []
      }
    ],
    "name": "app.mall.delta.biz.NopAuthUserEx2BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "extAction1",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "app.mall.delta.biz.NopAuthUserExBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.delta.dao.entity.NopAuthUserEx",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mallUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mallUser"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mallUserId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getMallUser",
        "parameterTypes": []
      },
      {
        "name": "getMallUserId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMallUser",
        "parameterTypes": [
          "app.mall.dao.entity.LitemallUser"
        ]
      },
      {
        "name": "setMallUserId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "app.mall.delta.dao.entity._gen._NopAuthUserEx",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallAdBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallAddressBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallAdminBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "goodsProductMapper"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "logManager"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "payService"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "smsSender"
      }
    ],
    "methods": [
      {
        "name": "batchApprove",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchReject",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refund",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "app.mall.service.entity.LitemallAftersaleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallBrandBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallCartBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallCategoryBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallCollectBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallCommentBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallCouponBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallCouponUserBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallFeedbackBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallFootprintBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallGoodsAttributeBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "goodsMapper"
      }
    ],
    "methods": [
      {
        "name": "defaultPrepareQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "app.mall.service.entity.LitemallGoodsBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallGoodsProductBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallGoodsSpecificationBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallGrouponBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallGrouponRulesBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallIssueBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallKeywordBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallLogBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallNoticeAdminBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallNoticeBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallOrderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallOrderGoodsBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallPermissionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallRegionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallSearchHistoryBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallStorageBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallSystemBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallTopicBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallUserBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "app.mall.service.entity.LitemallUserRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "refund",
        "parameterTypes": [
          "io.nop.api.core.beans.ApiRequest"
        ]
      }
    ],
    "name": "app.mall.wx.WxPayServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "seal",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "com.zaxxer.hikari.HikariConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_BAD_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FORBIDDEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_NOT_FOUND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_OK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_UNAUTHORIZED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_KEY_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_ORDER_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ATTR_SERVICE_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_ALL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_READ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_WRITE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_JSON_IGNORE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_READABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_WRITABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_PROTOTYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_SINGLETON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_CONTAINER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_VALUE_NONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIRECTIVE_PROP_META"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRING_ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_BIZ_FATAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_ERROR_CODE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_MSG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_STATUS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACCESS_TOKEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACTOR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_KEY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CLIENT_ADDR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CONTENT_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_COOKIE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_DEVICE_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_LOCALE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ONE_WAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_REL_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SHARD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ACTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ROUTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TASK_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_NO"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_USER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_VERSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTTP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_API_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_AUTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_CACHE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_FLOW_CONTROL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_SINGLE_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TCC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TRANSACTIONAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_USER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "META_KEY_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NO_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_ENTITY_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_FIELD_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_PROP_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_TARGET_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SYS_PARAM_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TEMP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_BODY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_LOC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "YES_VALUE"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.ApiConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "requireNew",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.orm.SingleSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "propagation",
        "parameterTypes": []
      },
      {
        "name": "txnGroup",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.txn.Transactional",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "copyHeaders",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      },
      {
        "name": "getSelectedHeaders",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiMessage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBooleanProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getFieldSelection",
        "parameterTypes": []
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getStringProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFieldSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "buildSuccess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getHttpStatus",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getMsgTimeout",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResponse",
        "parameterTypes": []
      },
      {
        "name": "isBizSuccess",
        "parameterTypes": []
      },
      {
        "name": "isHttp2XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp3XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp4XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp5XX",
        "parameterTypes": []
      },
      {
        "name": "isOk",
        "parameterTypes": []
      },
      {
        "name": "isWrapper",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHttpStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMsgTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTryResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setWrapper",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiResponse",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOptionByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOptionByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOptionCount",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getValueByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueType",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isNormalized",
        "parameterTypes": []
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalized",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictOptionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ExtensibleBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DEFAULT_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HIDDEN_SELECTION"
      }
    ],
    "methods": [
      {
        "name": "_flatten",
        "parameterTypes": [
          "java.util.Set",
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addCompositeField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "addDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addHiddenField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "flattenFields",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromProp",
        "parameterTypes": [
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "fromProps",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectives",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isSimpleField",
        "parameterTypes": []
      },
      {
        "name": "makeFields",
        "parameterTypes": []
      },
      {
        "name": "makeSubField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "mergeFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newFieldSelectionBean",
        "parameterTypes": []
      },
      {
        "name": "printTo",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "boolean"
        ]
      },
      {
        "name": "setArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDirective",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.FieldSelectionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_AND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATETIME_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATE_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ENDS_WITH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EQ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EXPR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ICONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LIKE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_OR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_REGEX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_SQL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_STARTS_WITH"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.beans.FilterBeanConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getHasNext",
        "parameterTypes": []
      },
      {
        "name": "getHasPrev",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getNextCursor",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPageCount",
        "parameterTypes": []
      },
      {
        "name": "getPrevCursor",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "isNoMore",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasNext",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPrev",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNextCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoMore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPrevCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.PageBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addChild",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "attr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "attrIgnoreNull",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "createFromJson",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean",
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toQueryBean",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.TreeBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_HTML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_JAVASCRIPT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_OCTET"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_XML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENt_TYPE_TEXT"
      }
    ],
    "methods": [
      {
        "name": "binary",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "js",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "json",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.WebContentBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getReqId",
        "parameterTypes": []
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setReqId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.CancelRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEdges",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getPageInfo",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "setEdges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPageInfo",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLPageInfo"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLConnection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAfter",
        "parameterTypes": []
      },
      {
        "name": "getBefore",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "setAfter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBefore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFirst",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLast",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLConnectionInput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getNode",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNode",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLNode"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLEdgeBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addLocation",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLSourceLocation"
        ]
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLErrorBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEndCursor",
        "parameterTypes": []
      },
      {
        "name": "getHasNextPage",
        "parameterTypes": []
      },
      {
        "name": "getHasPreviousPage",
        "parameterTypes": []
      },
      {
        "name": "getStartCursor",
        "parameterTypes": []
      },
      {
        "name": "setEndCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasNextPage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPreviousPage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLPageInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExtensions",
        "parameterTypes": []
      },
      {
        "name": "getOperationId",
        "parameterTypes": []
      },
      {
        "name": "getOperationName",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getVariable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVariables",
        "parameterTypes": []
      },
      {
        "name": "setExtensions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOperationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtensions",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "hasError",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtensions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toApiResponse",
        "parameterTypes": []
      },
      {
        "name": "toErrorBean",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumn",
        "parameterTypes": []
      },
      {
        "name": "getLine",
        "parameterTypes": []
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLine",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLSourceLocation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.GroupFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isAsc",
        "parameterTypes": []
      },
      {
        "name": "isDesc",
        "parameterTypes": []
      },
      {
        "name": "reverse",
        "parameterTypes": []
      },
      {
        "name": "setAsc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.query.OrderFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "addGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addOrderField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getGroupBy",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJoins",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hasGroupBy",
        "parameterTypes": []
      },
      {
        "name": "hasGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isFindPrev",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFindPrev",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroupBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJoins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "transformFilter",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneExceptOwner",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAggFunc",
        "parameterTypes": []
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAggFunc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QuerySourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fillInStackTrace",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.exceptions.NopEvalException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "s_seq"
      }
    ],
    "methods": [
      {
        "name": "adapt",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addDetail",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "addXplStack",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addXplStack",
        "parameterTypes": [
          "java.lang.Throwable",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "args",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "bizFatal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "cause",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "description",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forWrap",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorLocation",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getParam",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getParams",
        "parameterTypes": []
      },
      {
        "name": "getParamsString",
        "parameterTypes": []
      },
      {
        "name": "getSeq",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getXplStack",
        "parameterTypes": []
      },
      {
        "name": "isAlreadyTraced",
        "parameterTypes": []
      },
      {
        "name": "isBizFatal",
        "parameterTypes": []
      },
      {
        "name": "isWrapException",
        "parameterTypes": []
      },
      {
        "name": "loc",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "logIfNotTraced",
        "parameterTypes": [
          "org.slf4j.Logger",
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "param",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "params",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAlreadyTraced",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "source",
        "parameterTypes": [
          "io.nop.api.core.util.ISourceLocationGetter"
        ]
      },
      {
        "name": "status",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "throwIfFatal",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "when",
        "parameterTypes": [
          "boolean",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "io.nop.api.core.exceptions.NopException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.json.IJsonString",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.resource.IResourceReference",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "FUTURE_DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "INVALID_DATE"
      }
    ],
    "methods": [
      {
        "name": "encodeStringMap",
        "parameterTypes": [
          "java.util.Map",
          "char",
          "char"
        ]
      },
      {
        "name": "hasText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfInRange",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "isAllDigit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllZero",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isBlank",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "isEmptyObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isNotBlank",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNotEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSpace",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parseSlotScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseStringMap",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "char"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "renderTemplateForScope",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "stripedSplit",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "stripedSplit",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ApiStringHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkEquals",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkFromTo",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "checkOffsetLength",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "checkPositionIndex",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "checkPositionIndex",
        "parameterTypes": [
          "int",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "nonNegativeInt",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "nonNegativeLong",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "notEmpty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "notNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "positiveInt",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "positiveLong",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.util.Guard",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ICloneable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationGetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationSetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "get_id",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IWithIdentifier",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessCode",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "setAccessCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.AccessCodeRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.AccessTokenRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCertId",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getDeviceId",
        "parameterTypes": []
      },
      {
        "name": "getDeviceType",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryRoleId",
        "parameterTypes": []
      },
      {
        "name": "getPrincipalId",
        "parameterTypes": []
      },
      {
        "name": "getPrincipalSecret",
        "parameterTypes": []
      },
      {
        "name": "getSsoToken",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": []
      },
      {
        "name": "getVerifySecret",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isRememberMe",
        "parameterTypes": []
      },
      {
        "name": "setCertId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrimaryRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrincipalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrincipalSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRememberMe",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSsoToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifySecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getExpiresIn",
        "parameterTypes": []
      },
      {
        "name": "getRefreshExpiresIn",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getSessionState",
        "parameterTypes": []
      },
      {
        "name": "getTokenType",
        "parameterTypes": []
      },
      {
        "name": "getUserInfo",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpiresIn",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshExpiresIn",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserInfo",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginUserInfo"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginResult",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getHomePath",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHomePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginUserInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LogoutRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.RefreshTokenRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addResource",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "deepCloneResources",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "isSupportDebug",
        "parameterTypes": []
      },
      {
        "name": "removeFunctionPoints",
        "parameterTypes": []
      },
      {
        "name": "removeInactive",
        "parameterTypes": []
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setResources",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sortResources",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.api.messages.SiteMapBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addChild",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "fixStatus",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getMeta",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getResourceType",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getRoutePath",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAuthCascadeUp",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "isNoAuth",
        "parameterTypes": []
      },
      {
        "name": "removeFunctionPoints",
        "parameterTypes": []
      },
      {
        "name": "removeInactive",
        "parameterTypes": []
      },
      {
        "name": "setAuthCascadeUp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setMeta",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRoutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sortChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.api.messages.SiteResourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAuthCookie",
        "parameterTypes": []
      },
      {
        "name": "getAuthPaths",
        "parameterTypes": []
      },
      {
        "name": "getLoginUrl",
        "parameterTypes": []
      },
      {
        "name": "getLogoutUrl",
        "parameterTypes": []
      },
      {
        "name": "getPublicPaths",
        "parameterTypes": []
      },
      {
        "name": "isDefaultPublic",
        "parameterTypes": []
      },
      {
        "name": "isPublicPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthCookie",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultPublic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLoginUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.filter.AuthFilterConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkLogoutUrl",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getAuthToken",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getAuthTokenFromCookie",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getAuthTokenFromHeader",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "handleUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier",
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "initUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "isAjaxRequest",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "isNeedRefresh",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "responseNotLogin",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "responseNotLogin",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.nop.auth.core.filter.AuthFilterConfig"
        ]
      },
      {
        "name": "setLoginService",
        "parameterTypes": [
          "io.nop.auth.core.login.ILoginService"
        ]
      }
    ],
    "name": "io.nop.auth.core.filter.AuthHttpServerFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateAccessCode",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateAccessToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateRefreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "getAlgorithm",
        "parameterTypes": []
      },
      {
        "name": "getEncKey",
        "parameterTypes": []
      },
      {
        "name": "getSignKey",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.jwt.JwtAuthTokenProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginSessionStore"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextHook"
      }
    ],
    "methods": [
      {
        "name": "doGetUserContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "doLogout",
        "parameterTypes": [
          "int",
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "getLoginUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSessionInfoForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "killLoginAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractLoginService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "config"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginFailCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userSessionCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeCache"
      }
    ],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "killLoginAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "io.nop.auth.api.messages.LogoutRequest"
        ]
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.core.login.AuthToken"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.ILoginService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.LocalUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.login.RandomSessionIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLoginFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMaxLoginUserCount",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCodeTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyKey",
        "parameterTypes": []
      },
      {
        "name": "setLoginFailTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxLoginUserCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyCodeTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearDirty",
        "parameterTypes": []
      },
      {
        "name": "dirty",
        "parameterTypes": []
      },
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryRole",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "isUserInAnyRole",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isUserInRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "markDirty",
        "parameterTypes": []
      },
      {
        "name": "removeRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.core.model.ActionAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.core.model.DataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      }
    ],
    "name": "io.nop.auth.core.model.ObjDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "mergeChecker",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "mergeFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeGenerator"
        ]
      }
    ],
    "name": "io.nop.auth.core.model.RoleDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRole",
        "parameterTypes": [
          "io.nop.auth.core.model.AuthRoleModel"
        ]
      },
      {
        "name": "addSite",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSite",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSites",
        "parameterTypes": []
      },
      {
        "name": "hasRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoles",
        "parameterTypes": []
      },
      {
        "name": "hasSite",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSites",
        "parameterTypes": []
      },
      {
        "name": "keySet_roles",
        "parameterTypes": []
      },
      {
        "name": "keySet_sites",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSites",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._ActionAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addObj",
        "parameterTypes": [
          "io.nop.auth.core.model.ObjDataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObjs",
        "parameterTypes": []
      },
      {
        "name": "hasObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObjs",
        "parameterTypes": []
      },
      {
        "name": "keySet_objs",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setObjs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._DataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoleAuth",
        "parameterTypes": [
          "io.nop.auth.core.model.RoleDataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRoleAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoleAuths",
        "parameterTypes": []
      },
      {
        "name": "hasRoleAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoleAuths",
        "parameterTypes": []
      },
      {
        "name": "keySet_roleAuths",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleAuths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._ObjDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCheck",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCheck",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeGenerator"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._RoleDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.BCryptPasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "getFirstEncoder",
        "parameterTypes": []
      },
      {
        "name": "getSecondEncoder",
        "parameterTypes": []
      },
      {
        "name": "isUseSecondSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setSecondEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setUseSecondSalt",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.CompositePasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowedPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDigitCount",
        "parameterTypes": []
      },
      {
        "name": "getLowerCaseCount",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getSpecialCharCount",
        "parameterTypes": []
      },
      {
        "name": "getUpperCaseCount",
        "parameterTypes": []
      },
      {
        "name": "isNotUserName",
        "parameterTypes": []
      },
      {
        "name": "setDigitCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLowerCaseCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNotUserName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSpecialCharCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUpperCaseCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.DefaultPasswordPolicy",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.SHA256PasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "height"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "length"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "width"
      }
    ],
    "methods": [
      {
        "name": "checkValid",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "color",
        "parameterTypes": []
      },
      {
        "name": "drawBezierLine",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawBezierLine",
        "parameterTypes": [
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawImage",
        "parameterTypes": [
          "java.lang.String",
          "java.io.OutputStream"
        ]
      },
      {
        "name": "drawLine",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawOval",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawOval",
        "parameterTypes": [
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "generateCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadFont",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.verifycode.DefaultVerifyCodeGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthExtLogin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthOpLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthPosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRoot",
        "parameterTypes": []
      },
      {
        "name": "isTopMenu",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRoleDataAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRoleResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthSite",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthTenant",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthUserSubstitution",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getDeptName",
        "parameterTypes": []
      },
      {
        "name": "getDeptType",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getOrderNum",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPhone",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getLoginValue",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLoginValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthExtLogin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizActionName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errorCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opRequest"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opResponse"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizActionName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errorCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opRequest"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opResponse"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_session"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizActionName",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getLogId",
        "parameterTypes": []
      },
      {
        "name": "getOpRequest",
        "parameterTypes": []
      },
      {
        "name": "getOpResponse",
        "parameterTypes": []
      },
      {
        "name": "getResultStatus",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUsedTime",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizActionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpRequest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpResponse",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResultStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthSession"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsedTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthOpLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPositionId",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPositionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthPosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_depends"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_hidden"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_icon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keepAlive"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_metaConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_noAuth"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_propsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_routePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_target"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_depends"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_hidden"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_icon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keepAlive"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_metaConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_metaConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_noAuth"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propsConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_routePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_site"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_target"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getHidden",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getIsLeaf",
        "parameterTypes": []
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "getMetaConfig",
        "parameterTypes": []
      },
      {
        "name": "getMetaConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getNoAuth",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getPropsConfig",
        "parameterTypes": []
      },
      {
        "name": "getPropsConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResourceId",
        "parameterTypes": []
      },
      {
        "name": "getResourceType",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getRoutePath",
        "parameterTypes": []
      },
      {
        "name": "getSite",
        "parameterTypes": []
      },
      {
        "name": "getSiteId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsLeaf",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setMetaConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropsConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSite",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthSite"
        ]
      },
      {
        "name": "setSiteId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_childRoleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isPrimary"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_childRoleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isPrimary"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildRoleIds",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getIsPrimary",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceList_label",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResourceMappings",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRoleName",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserMappings",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildRoleIds",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsPrimary",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setRelatedResourceIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelatedUserIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObj"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filterConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObj"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filterConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObj",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRoleDataAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resource"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getResourceId",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRoleResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastAccessTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginAddr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginApp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginDevice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginOs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastAccessTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginAddr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginApp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginDevice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginOs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getLastAccessTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginAddr",
        "parameterTypes": []
      },
      {
        "name": "getLoginApp",
        "parameterTypes": []
      },
      {
        "name": "getLoginDevice",
        "parameterTypes": []
      },
      {
        "name": "getLoginOs",
        "parameterTypes": []
      },
      {
        "name": "getLoginTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getLogoutBy",
        "parameterTypes": []
      },
      {
        "name": "getLogoutTime",
        "parameterTypes": []
      },
      {
        "name": "getLogoutType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastAccessTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setLoginAddr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginApp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginDevice",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginOs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogoutBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLogoutType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_configVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_configVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resources"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExtConfig",
        "parameterTypes": []
      },
      {
        "name": "getExtConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getSiteId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSiteId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthSite",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_beginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_beginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBeginTime",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBeginTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthTenant",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_changePwdAtLogin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_emailVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idNbr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nickName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_openId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phoneVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pwdUpdateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_realName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_salt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_telephone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_changePwdAtLogin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dept"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_emailVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idNbr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nickName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_openId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phoneVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_position"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pwdUpdateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_realName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_salt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutionMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_telephone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workNo"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAvatar",
        "parameterTypes": []
      },
      {
        "name": "getBirthday",
        "parameterTypes": []
      },
      {
        "name": "getChangePwdAtLogin",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDept",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getEmailVerified",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getGender",
        "parameterTypes": []
      },
      {
        "name": "getIdNbr",
        "parameterTypes": []
      },
      {
        "name": "getIdType",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPhone",
        "parameterTypes": []
      },
      {
        "name": "getPhoneVerified",
        "parameterTypes": []
      },
      {
        "name": "getPosition",
        "parameterTypes": []
      },
      {
        "name": "getPositionId",
        "parameterTypes": []
      },
      {
        "name": "getPwdUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getSalt",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutionMappings",
        "parameterTypes": []
      },
      {
        "name": "getTelephone",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getUserType",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWorkNo",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBirthday",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setChangePwdAtLogin",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDept",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmailVerified",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setGender",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdNbr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhoneVerified",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setPosition",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthPosition"
        ]
      },
      {
        "name": "setPositionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPwdUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTelephone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorkNo",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_substitutedUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutedUser"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutedUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutedUser",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutedUserId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setSubstitutedUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setSubstitutedUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUserSubstitution",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateUserId",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "generateUserOpenId",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      }
    ],
    "name": "io.nop.auth.dao.generator.DefaultUserIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "buildLog",
        "parameterTypes": [
          "io.nop.api.core.audit.AuditRequest"
        ]
      },
      {
        "name": "doProcess",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "saveAudit",
        "parameterTypes": [
          "io.nop.api.core.audit.AuditRequest"
        ]
      }
    ],
    "name": "io.nop.auth.service.audit.AuditServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.audit.AuditServiceImpl__aop",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setSiteMapProvider",
        "parameterTypes": [
          "io.nop.auth.service.sitemap.SiteMapProviderImpl"
        ]
      }
    ],
    "name": "io.nop.auth.service.auth.DefaultActionAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAIN_DATA_AUTH_XML"
      }
    ],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "loadDataAuthModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      }
    ],
    "name": "io.nop.auth.service.auth.DefaultDataAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginService"
      }
    ],
    "methods": [
      {
        "name": "buildLoginResult",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginResultAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.AccessCodeRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getLoginUserInfoAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.AccessTokenRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LogoutRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refreshTokenAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.RefreshTokenRequest",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.biz.LoginApiBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteMapProvider"
      }
    ],
    "methods": [
      {
        "name": "filterForUser",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "getSiteMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.service.biz.SiteMapApiBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthDeptBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthExtLoginBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthOpLogBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthPositionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteMapProvider"
      }
    ],
    "methods": [
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getMenuTree",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refreshSiteMapCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthResourceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoleUsers",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeRoleUsers",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "roleResourceIds",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "roleUsers",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "updateRoleResources",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthRoleDataAuthBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthRoleResourceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthSessionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthSiteBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthTenantBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordPolicy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userIdGenerator"
      }
    ],
    "methods": [
      {
        "name": "changeSelfPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "disableUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "enableUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "resetUserPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthUserBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthUserRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthUserSubstitutionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "sessionIdGenerator"
      }
    ],
    "methods": [
      {
        "name": "getActionSessions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSessionInfoForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadSession",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logoutSession",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.DaoLoginSessionStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "auditService"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "authTokenProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeGenerator"
      }
    ],
    "methods": [
      {
        "name": "addDefaultUser",
        "parameterTypes": []
      },
      {
        "name": "auditLogFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.auth.api.messages.LoginRequest",
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "autoLogout",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "buildUserContext",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser",
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "checkVerifyCode",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllowedLoginMethods",
        "parameterTypes": []
      },
      {
        "name": "getAuthUser",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "getUserByEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByOpenId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "isValidLoginMethod",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "lazyInit",
        "parameterTypes": []
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "io.nop.auth.api.messages.LogoutRequest"
        ]
      },
      {
        "name": "needCheckPassword",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextImpl",
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "setAllowedLoginMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.LoginServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteCache"
      }
    ],
    "methods": [
      {
        "name": "applyAuthFilter",
        "parameterTypes": [
          "java.util.List",
          "java.util.Map",
          "java.util.Set"
        ]
      },
      {
        "name": "containsRole",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Set"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "filterAllowedMenu",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean",
          "java.lang.String",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "getAllowedSiteEntries",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getRoleResources",
        "parameterTypes": []
      },
      {
        "name": "getRolesWithPermission",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getSiteMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getSites",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isMenu",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "loadSiteData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadStaticSiteMap",
        "parameterTypes": []
      },
      {
        "name": "normalizeI18n",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeI18n",
        "parameterTypes": [
          "io.nop.auth.service.sitemap.SiteCacheData",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeLabel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "refreshCache",
        "parameterTypes": []
      },
      {
        "name": "setEnableActionAuth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.service.sitemap.SiteMapProviderImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "appendOrderByPk",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "asDict",
        "parameterTypes": [
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchGet",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchModify",
        "parameterTypes": [
          "java.util.List",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkAllowQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkDataAuth",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkEntityFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkEntityFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkMandatoryParam",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkUniqueForSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData"
        ]
      },
      {
        "name": "copyForNew",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "dao",
        "parameterTypes": []
      },
      {
        "name": "daoFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "daoProvider",
        "parameterTypes": []
      },
      {
        "name": "defaultPrepareDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleteReferences",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleted_findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDelete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSaveEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdate",
        "parameterTypes": [
          "java.util.Map",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCascadeProps",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.dao.api.IEntityDao"
        ]
      },
      {
        "name": "getThisObj",
        "parameterTypes": []
      },
      {
        "name": "invokeAction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext",
          "io.nop.biz.crud.BizInvocation"
        ]
      },
      {
        "name": "orm",
        "parameterTypes": []
      },
      {
        "name": "prepareFindFirstQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "prepareFindPageQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "recoverDeleted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeRelation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryTransformer",
        "parameterTypes": [
          "io.nop.dao.api.IQueryTransformer"
        ]
      },
      {
        "name": "tryDelete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "trySave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "tryUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.Map",
          "java.util.function.Predicate",
          "boolean",
          "java.lang.String",
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.biz.crud.CrudBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "beans",
        "parameterTypes": []
      },
      {
        "name": "configVars",
        "parameterTypes": []
      },
      {
        "name": "dependsSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.global.IGlobalVariableDefinition"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "getFunctionDocKey",
        "parameterTypes": [
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "globalFunctions",
        "parameterTypes": []
      },
      {
        "name": "globalVars",
        "parameterTypes": []
      },
      {
        "name": "graphql",
        "parameterTypes": []
      },
      {
        "name": "methods",
        "parameterTypes": [
          "io.nop.biz.dev.beans.GlobalVariableDefBean"
        ]
      },
      {
        "name": "toArgBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "toArgsBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "toFunctionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      }
    ],
    "name": "io.nop.biz.dev.DevDocBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearComponentCache",
        "parameterTypes": []
      },
      {
        "name": "refreshVirtualFileSystem",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.dev.DevToolBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.ConfigVarBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionArgBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeclaringClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isStaticClass",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.GlobalVariableDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.biz.dict.DictProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dict.ObjDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildResponse",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBizObjNames",
        "parameterTypes": []
      },
      {
        "name": "getBizObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGraphQLDocument",
        "parameterTypes": []
      },
      {
        "name": "getObjectTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinitions",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType"
        ]
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTypeDefinitions",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "resolveTypeDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLType"
        ]
      },
      {
        "name": "setActionDecoratorCollectors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizModelBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setMakerCheckerProvider",
        "parameterTypes": [
          "io.nop.biz.makerchecker.IMakerCheckerProvider"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      },
      {
        "name": "setSchemaInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTypeRegistry",
        "parameterTypes": [
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      }
    ],
    "name": "io.nop.biz.impl.BizObjectManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExecutable",
        "parameterTypes": []
      },
      {
        "name": "getOperationType",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isReturnMandatory",
        "parameterTypes": []
      },
      {
        "name": "setExecutable",
        "parameterTypes": [
          "io.nop.core.context.action.IServiceAction"
        ]
      }
    ],
    "name": "io.nop.biz.model.BizActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.biz.model.BizActionArgModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheEvicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getMakerChecker",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturn",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTcc",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTxn",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isBizSequential",
        "parameterTypes": []
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setBizSequential",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "io.nop.biz.model.BizCacheModel"
        ]
      },
      {
        "name": "setCacheEvicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerChecker",
        "parameterTypes": [
          "io.nop.biz.model.BizMakerCheckerModel"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturn",
        "parameterTypes": [
          "io.nop.biz.model.BizReturnModel"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setTcc",
        "parameterTypes": [
          "io.nop.biz.model.BizTccModel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTxn",
        "parameterTypes": [
          "io.nop.biz.model.BizTxnModel"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAction",
        "parameterTypes": [
          "io.nop.biz.model.BizActionModel"
        ]
      },
      {
        "name": "addLoader",
        "parameterTypes": [
          "io.nop.biz.model.BizLoaderModel"
        ]
      },
      {
        "name": "addObserve",
        "parameterTypes": [
          "io.nop.biz.model.BizObserveModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "getDisabledActions",
        "parameterTypes": []
      },
      {
        "name": "getInheritActions",
        "parameterTypes": []
      },
      {
        "name": "getLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoaders",
        "parameterTypes": []
      },
      {
        "name": "getMetaDir",
        "parameterTypes": []
      },
      {
        "name": "getObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObserves",
        "parameterTypes": []
      },
      {
        "name": "getStateMachine",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "hasAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasActions",
        "parameterTypes": []
      },
      {
        "name": "hasLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasLoaders",
        "parameterTypes": []
      },
      {
        "name": "hasObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObserves",
        "parameterTypes": []
      },
      {
        "name": "keySet_actions",
        "parameterTypes": []
      },
      {
        "name": "keySet_loaders",
        "parameterTypes": []
      },
      {
        "name": "keySet_observes",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInheritActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLoaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMetaDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObserves",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStateMachine",
        "parameterTypes": [
          "io.nop.fsm.model.StateMachineModel"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "addMethod",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredMethods",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicMethods",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isUnsafeAllocated",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "setAllDeclaredConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllDeclaredMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnsafeAllocated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectClass",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllowUnsafeAccess",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "setAllowUnsafeAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowWrite",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameterTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toParamString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenAfterInitialization",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "async",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "expireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "expireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getExpireAfterAccess",
        "parameterTypes": []
      },
      {
        "name": "getExpireAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "getMaximumSize",
        "parameterTypes": []
      },
      {
        "name": "getMaximumWeight",
        "parameterTypes": []
      },
      {
        "name": "getRefreshAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isCacheTypeChanged",
        "parameterTypes": [
          "io.nop.commons.cache.CacheConfig"
        ]
      },
      {
        "name": "isDestroyOnRemove",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "isWeakKeys",
        "parameterTypes": []
      },
      {
        "name": "isWeakValues",
        "parameterTypes": []
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDestroyOnRemove",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setExpireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaximumSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumWeight",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useMetrics",
        "parameterTypes": []
      },
      {
        "name": "weakKeys",
        "parameterTypes": []
      },
      {
        "name": "weakValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.CacheConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.LocalCacheProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAllUnique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "emptyList",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "freezeList",
        "parameterTypes": []
      },
      {
        "name": "fromList",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.Function"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.collections.KeyedList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "concat",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "every",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "expandList",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "pop",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "push",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "push",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "reduce",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.BiFunction",
          "java.lang.Object"
        ]
      },
      {
        "name": "reduceRight",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.BiFunction",
          "java.lang.Object"
        ]
      },
      {
        "name": "reverse",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "shift",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "slice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "some",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "splice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int"
        ]
      },
      {
        "name": "splice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "unshift",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "unshift",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "io.nop.commons.collections.ListFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "doProcess",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getProcessingCount",
        "parameterTypes": []
      },
      {
        "name": "getQueue",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getThreadPoolName",
        "parameterTypes": []
      },
      {
        "name": "isAllProcessed",
        "parameterTypes": []
      },
      {
        "name": "setQueueConfig",
        "parameterTypes": [
          "io.nop.commons.concurrent.batch.BatchQueueConfig"
        ]
      },
      {
        "name": "setSpecialMessageProcessor",
        "parameterTypes": [
          "io.nop.api.core.message.ISpecialMessageProcessor"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.concurrent.batch.AbstractBatchProcessService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.ITagSetSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.ICancellable"
        ]
      },
      {
        "name": "appendOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "cancel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCancelReason",
        "parameterTypes": []
      },
      {
        "name": "isCancelled",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.ICancellable"
        ]
      },
      {
        "name": "prependOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "removeOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "tryRunCallbacks",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.impl.Cancellable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.ILifeCycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginStop",
        "parameterTypes": []
      },
      {
        "name": "checkIsActive",
        "parameterTypes": []
      },
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAllowRestart",
        "parameterTypes": []
      },
      {
        "name": "setAllowRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.LifeCycleSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "lower"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "upper"
      }
    ],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.text.CharacterCase",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BYTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BYTES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DURATION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LIST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NEVER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "POINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SHORT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "STRING"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "UNKNOWN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VOID"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromJavaClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "fromJavaClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromJsonName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDemoJsonValue",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getMandatoryJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getMandatoryJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getMaxIndex",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getSimpleClassName",
        "parameterTypes": []
      },
      {
        "name": "isAbstractType",
        "parameterTypes": []
      },
      {
        "name": "isBoolType",
        "parameterTypes": []
      },
      {
        "name": "isGeoType",
        "parameterTypes": []
      },
      {
        "name": "isListType",
        "parameterTypes": []
      },
      {
        "name": "isMapType",
        "parameterTypes": []
      },
      {
        "name": "isNumericType",
        "parameterTypes": []
      },
      {
        "name": "isPrimitiveType",
        "parameterTypes": []
      },
      {
        "name": "isSimpleType",
        "parameterTypes": []
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTemporalType",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toInitializer",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "COMPACT_DATE_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "COMPACT_DATE_TIME_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_DAY_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_HOUR_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_MINUTE_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME_FORMATTER"
      }
    ],
    "methods": [
      {
        "name": "buildFormatter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentDate",
        "parameterTypes": []
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "currentLocalDate",
        "parameterTypes": []
      },
      {
        "name": "currentTimeMillis",
        "parameterTypes": []
      },
      {
        "name": "dateDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "dateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "dateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "dateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "dateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "diffDays",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstInMonth",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatJavaDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp",
          "java.lang.String"
        ]
      },
      {
        "name": "fromUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDayStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getHourStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getHourStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "isMonthDay",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.MonthDay"
        ]
      },
      {
        "name": "lastDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "lastDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "localDateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "localDateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "millisToDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "monthDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "parseDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDuration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerFormatter",
        "parameterTypes": [
          "java.lang.String",
          "java.time.format.DateTimeFormatter"
        ]
      },
      {
        "name": "toDayOfWeek",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "toUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "toZone",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.time.ZoneId"
        ]
      },
      {
        "name": "yearDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "zone",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.commons.util.DateHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHARSET_1252"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHARSET_ISO_8859_1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHARSET_UTF8"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIGITS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_BYTES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRING"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRINGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENCODING_UTF8"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENV_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENV_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTML_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTML_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_NAME_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_NAME_CHARS_STR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_NAME_REPLS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_PATH_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_PATH_CHARS_STR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JAVA_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JAVA_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LINE_PATTERN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOWER_CASE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REGEX_BR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REGEX_P"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REGEX_TAG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SPECIAL_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_CHARS_SLASH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_STRS_SLASH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "UPPER_CASE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ATTR_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ATTR_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_VALUE_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_VALUE_ESCAPE_STRS"
      }
    ],
    "methods": [
      {
        "name": "_containsControlAscii",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_escapeControlAscii",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_indexOf",
        "parameterTypes": [
          "[C",
          "char"
        ]
      },
      {
        "name": "_isValidXmlNamePart",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "_toString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "_unescapeXml",
        "parameterTypes": [
          "char",
          "char",
          "char",
          "char"
        ]
      },
      {
        "name": "absolutePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "appendPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "appendQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "asRawText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beanPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bytesToHex",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "bytesToHex",
        "parameterTypes": [
          "[B",
          "boolean"
        ]
      },
      {
        "name": "camelCase",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "camelCase",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      },
      {
        "name": "camelCaseToHyphen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "camelCaseToUnderscore",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "capitalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "classNameToPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "colCodeToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commaDelimitedListToSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commaDelimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "configVarToEnv",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsAnyChar",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "containsDigits",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsLowerCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsSpecialChar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsUpperCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsWhitespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "countChar",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "countContains",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "decapitalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeBase64",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeDupEscape",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "decodeHexByte",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "decodeHexNibble",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "decodeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeURL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeURL",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteAny",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "dropZero",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "emptyAsNull",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeBase64",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "encodeBase64Url",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "encodeDupEscape",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "encodeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeQuery",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "encodeQuery",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "encodeURL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeURL",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "encodeUriPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "endWith",
        "parameterTypes": [
          "java.lang.CharSequence",
          "char"
        ]
      },
      {
        "name": "endsWithIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "envToConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escape",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "escapeCRLF",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "escapeCharTo",
        "parameterTypes": [
          "char",
          "[C",
          "[Ljava.lang.String;",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeHtml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJavadoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJsonCharTo",
        "parameterTypes": [
          "char",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeJsonTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "escapeTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeUnicode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlAttrTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeXmlTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeXmlValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlValueTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeYaml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileNameNoExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "filePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileSizeString",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "fileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "firstPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "forEachTemplateVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachTemplateVar",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDegree",
        "parameterTypes": [
          "java.lang.Number"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatNumber",
        "parameterTypes": [
          "java.lang.Number"
        ]
      },
      {
        "name": "formatNumber",
        "parameterTypes": [
          "java.lang.Number",
          "java.lang.String"
        ]
      },
      {
        "name": "fullClassName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateUUID",
        "parameterTypes": []
      },
      {
        "name": "generateUUID",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getXmlProlog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "hasLength",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "head",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "hexToBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hmacSha256",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "i18n",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfAnyChar",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "intToHex",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "internList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isAbsolutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllAsciiLetter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllChar",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "isAsciiLetter",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isAsciiVarPart",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isAsciiVarStart",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isCanonicalFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDigit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isEmptyObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isGraphQLNamePart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isGraphQLNameStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isHexChar",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isInt",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "isJavaIdentifierPart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isJavaIdentifierStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isJavaKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isJavaScriptKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isNonNegativeInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNumber",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "isSafeAsciiToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSpaceInLine",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isValidClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFormat",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isValidHtmlAttrName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidJavaVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidSimpleVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidVPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidXmlName",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "isValidXmlNamespaceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isWhitespace",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isXLangKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isXmlNamePart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isXmlNameStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isYes",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.String"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "joinArray",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "lastPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "lastPart",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      },
      {
        "name": "leftPad",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "char"
        ]
      },
      {
        "name": "limitLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "limitLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "longToHex",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "maskPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchSimplePattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchSimplePatternSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "matchSimplePatterns",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "matchWildcard",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "md5Hash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "methodAdd",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodGet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodGet",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "methodMake",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "nextPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "normalizeCRLF",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "normalizeClassName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "normalizeComment",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onlyContainsWhitespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "packageName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseCsvList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDegree",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFileSizeString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseInt",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "parseNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "parseSimpleQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "pathEndsWith",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pathStartsWith",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "quote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "quoteDupEscapeString",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "quoteIfNecessary",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "randomDigits",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "relativizePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeHead",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeHtmlTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeLastPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "removeTail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceChars",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFileExt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFileType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "rightPad",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "char"
        ]
      },
      {
        "name": "safeFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "safeToString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sha256Hash",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "sha512Hash",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "shortText",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "simpleClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyJavaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyJavaType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "skip",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "splitDupEscaped",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "splitToArray",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "splitToLines",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startWith",
        "parameterTypes": [
          "java.lang.CharSequence",
          "char"
        ]
      },
      {
        "name": "startsWithAt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWithIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithPackage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "tail",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "toAbsolutePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharset",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "toStringArray",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "tokenizeToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "tokenizeToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "trimLeft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "trimSuffix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unquote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unquoteDupEscapeString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "utf8Bytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "utf8Length",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "wrapExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlNameToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlNameToVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlValueNeedEscape",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.commons.util.StringHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.config.initialize.ConfigInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.config.source.IConfigSource"
        ]
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRefreshInterval",
        "parameterTypes": []
      },
      {
        "name": "getSelectAllQuery",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectAllQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valid",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.config.source.jdbc.JdbcConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAfterComplete",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "addBeforeComplete",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "addErrorBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "awaitAsyncResults",
        "parameterTypes": []
      },
      {
        "name": "cancelAll",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "cancelAsyncResults",
        "parameterTypes": []
      },
      {
        "name": "complete",
        "parameterTypes": []
      },
      {
        "name": "completeExceptionally",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fireAfterComplete",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fireBeforeComplete",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getErrorBeans",
        "parameterTypes": []
      },
      {
        "name": "getEvalScope",
        "parameterTypes": []
      },
      {
        "name": "getExecutionId",
        "parameterTypes": []
      },
      {
        "name": "getMostSevereErrorBean",
        "parameterTypes": []
      },
      {
        "name": "hasAsyncResult",
        "parameterTypes": []
      },
      {
        "name": "isDone",
        "parameterTypes": []
      },
      {
        "name": "registerAsyncResult",
        "parameterTypes": [
          "java.util.concurrent.Future"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setErrorBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEvalScope",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "setExecutionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.context.ExecutionContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearResponseHeaders",
        "parameterTypes": []
      },
      {
        "name": "getActionAuthChecker",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getDataAuthChecker",
        "parameterTypes": []
      },
      {
        "name": "getParentContext",
        "parameterTypes": []
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      },
      {
        "name": "getRequestHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestHeaders",
        "parameterTypes": []
      },
      {
        "name": "getResponse",
        "parameterTypes": []
      },
      {
        "name": "getResponseHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseHeaders",
        "parameterTypes": []
      },
      {
        "name": "getUserContext",
        "parameterTypes": []
      },
      {
        "name": "newChildContext",
        "parameterTypes": []
      },
      {
        "name": "newServiceContextImpl",
        "parameterTypes": []
      },
      {
        "name": "setActionAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IActionAuthChecker"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICache"
        ]
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      },
      {
        "name": "setParentContext",
        "parameterTypes": [
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setRequest",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRequestHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setRequestHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setResponseHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setResponseHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      }
    ],
    "name": "io.nop.core.context.ServiceContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.dict.DictModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.CoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.ReflectionHelperMethodInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.VirtualFileSystemInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.IJsonSerializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkReadOnly",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "flatten",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachEntry",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getLocValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.json.JObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "chunk",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "compact",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "countBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "filterNull",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findIndex",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "getFieldValue",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "groupBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexByFields",
        "parameterTypes": [
          "java.util.Collection",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "invert",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "mergeMap",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "omit",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "pairs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "partition",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "pick",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pickNotNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pluck",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckAsMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckThenJoin",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "rename",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "retainAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "sortBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "toJObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "unique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.Underscore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_assignAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "_assignParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "_getElements",
        "parameterTypes": []
      },
      {
        "name": "_isAllChildText",
        "parameterTypes": []
      },
      {
        "name": "_isAnyChildCDATA",
        "parameterTypes": []
      },
      {
        "name": "_isElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "java.lang.String"
        ]
      },
      {
        "name": "addAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "after",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "after",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "appendScript",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "appendTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "assureAtMostOneChild",
        "parameterTypes": []
      },
      {
        "name": "attachChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "attrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "attrLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "attrTextOrEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": []
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": []
      },
      {
        "name": "bodyToXJson",
        "parameterTypes": []
      },
      {
        "name": "checkNotReadOnly",
        "parameterTypes": []
      },
      {
        "name": "child",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "childByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childIndex",
        "parameterTypes": []
      },
      {
        "name": "childIndexOfSameTag",
        "parameterTypes": []
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenToJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAttrs",
        "parameterTypes": []
      },
      {
        "name": "clearBody",
        "parameterTypes": []
      },
      {
        "name": "clearChildren",
        "parameterTypes": []
      },
      {
        "name": "clearComment",
        "parameterTypes": []
      },
      {
        "name": "clearLocation",
        "parameterTypes": []
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "closest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectXPath",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "commonAncestor",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "content",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "content",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "contentText",
        "parameterTypes": []
      },
      {
        "name": "countChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "countChildByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "countChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "depth",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "detachChildren",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "element",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elementAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "elementText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elements",
        "parameterTypes": []
      },
      {
        "name": "elements",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAllByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "firstChild",
        "parameterTypes": []
      },
      {
        "name": "firstLeaf",
        "parameterTypes": []
      },
      {
        "name": "forEachAttr",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachNode",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "fullXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrCount",
        "parameterTypes": []
      },
      {
        "name": "getAttrNames",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getDocType",
        "parameterTypes": []
      },
      {
        "name": "getDumpString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstruction",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getParentParent",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagNameWithoutNs",
        "parameterTypes": []
      },
      {
        "name": "getTreeLevel",
        "parameterTypes": []
      },
      {
        "name": "getXmlnsForUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttr",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasContent",
        "parameterTypes": []
      },
      {
        "name": "hasMixedContent",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": []
      },
      {
        "name": "innerHtml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "insertChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "insertChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "insertParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isCDataText",
        "parameterTypes": []
      },
      {
        "name": "isDummyNode",
        "parameterTypes": []
      },
      {
        "name": "isElementNode",
        "parameterTypes": []
      },
      {
        "name": "isTextNode",
        "parameterTypes": []
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.commons.functional.IEqualsChecker"
        ]
      },
      {
        "name": "jsonText",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastChild",
        "parameterTypes": []
      },
      {
        "name": "lastLeaf",
        "parameterTypes": []
      },
      {
        "name": "make",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeDocNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeNode",
        "parameterTypes": []
      },
      {
        "name": "makeTextNode",
        "parameterTypes": []
      },
      {
        "name": "matchAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "mergeAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "needAddJsonPrefix",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newAttrError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode",
          "java.lang.String"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "nextElementSibling",
        "parameterTypes": []
      },
      {
        "name": "nextLeaf",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "normalizeContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeScriptContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "outerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "output",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalOutput"
        ]
      },
      {
        "name": "ownText",
        "parameterTypes": []
      },
      {
        "name": "parent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parents",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "prependChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prevElementSibling",
        "parameterTypes": []
      },
      {
        "name": "prevLeaf",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeHandler"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrs",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeAttrsIf",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "removeAttrsWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeChildByIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "removeNextSiblings",
        "parameterTypes": []
      },
      {
        "name": "renameAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameChild",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameNsPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceBy",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceByList",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "replaceByXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireAttrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "root",
        "parameterTypes": []
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "selectMany",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDocType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.IXNodeExtension"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstruction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncAllExtensionFromNode",
        "parameterTypes": []
      },
      {
        "name": "syncAllExtensionToNode",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "toXJson",
        "parameterTypes": []
      },
      {
        "name": "transformAttr",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": []
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "updateSelected",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector",
          "java.lang.Object"
        ]
      },
      {
        "name": "visit",
        "parameterTypes": [
          "io.nop.core.model.tree.ITreeVisitor"
        ]
      },
      {
        "name": "wrapChildren",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "assignAttrs",
        "parameterTypes": [
          "io.nop.core.lang.json.JObject",
          "java.util.Map"
        ]
      },
      {
        "name": "beginListItem",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "beginNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "beginObjectChild",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "comment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "currentList",
        "parameterTypes": []
      },
      {
        "name": "currentObject",
        "parameterTypes": []
      },
      {
        "name": "currentTagInfo",
        "parameterTypes": []
      },
      {
        "name": "endDoc",
        "parameterTypes": []
      },
      {
        "name": "endNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getList",
        "parameterTypes": []
      },
      {
        "name": "getPropName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "boolean"
        ]
      },
      {
        "name": "getResult",
        "parameterTypes": []
      },
      {
        "name": "hasObjAttr",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isListType",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newList",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "newObject",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "processNode",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "simpleNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "value",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.CollectJObjectHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "beginDoc",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "beginNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "comment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "endDoc",
        "parameterTypes": []
      },
      {
        "name": "endNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrBoolean",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getAttrDouble",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "getAttrInt",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "simpleNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "value",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.XNodeHandlerAdapter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "defineMethod",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalFunction",
          "boolean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "makeComplexPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "method_invoke",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "obj_name",
        "parameterTypes": []
      },
      {
        "name": "obj_propValues",
        "parameterTypes": []
      },
      {
        "name": "prop_allow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.object.DynamicObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.core.model.table.IRow"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.model.table.ICell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.ICellView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "internalAddCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalAddCells",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "internalInsertCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalRemoveCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      }
    ],
    "name": "io.nop.core.model.table.IRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.IRowView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addToRow",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "cbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCols",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "insertRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertRows",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "isSpaceAvailable",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "makeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "mergeCell",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "rbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "removeCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeRows",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "setFooterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHeaderCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSideCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "trimBlankCols",
        "parameterTypes": []
      },
      {
        "name": "trimBlankRows",
        "parameterTypes": []
      },
      {
        "name": "trimTable",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.ITable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.ITableView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractCell"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.core.model.table.IRow"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "internalAddCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalAddCells",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "internalInsertCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalRemoveCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_deleteCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "_expandProxy",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "_insertCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "_isSpaceAvailable",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "_removeProxy",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "addRow",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractRow"
        ]
      },
      {
        "name": "addToRow",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "cbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "doRemoveCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "doSetCell",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getFooterCount",
        "parameterTypes": []
      },
      {
        "name": "getHeaderCount",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getProxy",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getSideCount",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "insertCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCols",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "insertRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertRows",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "invalidateColCount",
        "parameterTypes": []
      },
      {
        "name": "isSpaceAvailable",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "makeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "mergeCell",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "newRow",
        "parameterTypes": []
      },
      {
        "name": "normalizeMergeRanges",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "rbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "removeCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeRows",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "setFooterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHeaderCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSideCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toDebugString",
        "parameterTypes": []
      },
      {
        "name": "toHtmlString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "trimBlankCols",
        "parameterTypes": []
      },
      {
        "name": "trimBlankRows",
        "parameterTypes": []
      },
      {
        "name": "trimTable",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      },
      {
        "name": "validateProxy",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "validateRealCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.BaseCell"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.BaseCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.tree.ITreeChildrenStructure",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getPublishDate",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropGetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropSetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyExtPropsTo",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "getExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowedExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeExtPropsIfAbsent",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.reflect.hook.SerializableExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.IFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResourceLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_zipTool"
      }
    ],
    "methods": [
      {
        "name": "assertDirectory",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "buildClassPath",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "buildDeltaPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildNamespacePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildResourceFromURL",
        "parameterTypes": [
          "java.lang.String",
          "java.net.URL"
        ]
      },
      {
        "name": "buildTenantPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildTextScanner",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "checkNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "checkValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "filePostfixFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "genDayRandPath",
        "parameterTypes": []
      },
      {
        "name": "getAppProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "getCpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeltaLayerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDumpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getParentPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPathNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelatedResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStepListener",
        "parameterTypes": [
          "io.nop.api.core.util.progress.IProgressListener",
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getSubPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTempResource",
        "parameterTypes": []
      },
      {
        "name": "getTempResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getZipTool",
        "parameterTypes": []
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDeltaPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTenantPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isZipFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "readBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "registerZipTool",
        "parameterTypes": [
          "io.nop.core.resource.zip.IZipTool"
        ]
      },
      {
        "name": "removeNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePathResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativeStdPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveResource",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "unzip",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "unzipToDir",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "writeBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "[B"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.Properties"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "zipDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "zipDirToStream",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "java.io.OutputStream",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      }
    ],
    "name": "io.nop.core.resource.ResourceHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildComponentPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectDepends",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "collectDependsTo",
        "parameterTypes": [
          "io.nop.core.resource.deps.ResourceDependencySet",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "dumpDependsSet",
        "parameterTypes": [
          "io.nop.core.resource.deps.ResourceDependencySet"
        ]
      },
      {
        "name": "findModelTypeFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponentModelLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponentModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getModelConfigByModelPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModelDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSubComponent",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.util.IComponentModel",
          "java.lang.String"
        ]
      },
      {
        "name": "ignoreDepends",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isAnyDependsChange",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isAnyDependsChange",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "isDependencyChanged",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModelByUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadGeneratedComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadPrecompiledObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "registerComponentModelConfig",
        "parameterTypes": [
          "io.nop.core.resource.component.ComponentModelConfig"
        ]
      },
      {
        "name": "registerComponentModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.resource.IResourceObjectLoader",
          "boolean"
        ]
      },
      {
        "name": "registerComponentModelTransformer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.resource.component.IComponentTransformer",
          "boolean"
        ]
      },
      {
        "name": "registerComponentModelTransformer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.resource.component.IResourceComponentManager"
        ]
      },
      {
        "name": "resolveModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "runWhenDependsChanged",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "setChangeChecker",
        "parameterTypes": [
          "io.nop.core.resource.deps.IResourceChangeChecker"
        ]
      },
      {
        "name": "setDependsPersister",
        "parameterTypes": [
          "io.nop.core.resource.deps.IResourceDependsPersister"
        ]
      },
      {
        "name": "traceAllDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "traceDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.ResourceComponentManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "findResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceName",
        "parameterTypes": []
      },
      {
        "name": "getResourceNameNoExt",
        "parameterTypes": []
      },
      {
        "name": "getResourcePath",
        "parameterTypes": []
      },
      {
        "name": "getResourceStdPath",
        "parameterTypes": []
      },
      {
        "name": "getSiblingResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUseCpCache",
        "parameterTypes": []
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "setResourcePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": []
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractTextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.IResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.ITextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "generateName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkNotReadonly",
        "parameterTypes": []
      },
      {
        "name": "checkSupportStream",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream"
        ]
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.DelegateResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getCanonicalPath",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.impl.FileResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "error",
        "parameterTypes": []
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.UnknownResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTypeName",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.IGenericType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "arrayType",
        "parameterTypes": [
          "io.nop.core.type.impl.PredefinedGenericType",
          "java.lang.Class"
        ]
      },
      {
        "name": "containsTypeVariable",
        "parameterTypes": []
      },
      {
        "name": "getPredefinedName",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTypeName",
        "parameterTypes": []
      },
      {
        "name": "isArray",
        "parameterTypes": []
      },
      {
        "name": "isPredefined",
        "parameterTypes": []
      },
      {
        "name": "isResolved",
        "parameterTypes": []
      },
      {
        "name": "javaType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "parameterizedType",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.type.impl.PredefinedRawType",
          "[Lio.nop.core.type.impl.PredefinedGenericType;"
        ]
      },
      {
        "name": "primitiveType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.String"
        ]
      },
      {
        "name": "refine",
        "parameterTypes": [
          "io.nop.core.type.ITypeScope"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      },
      {
        "name": "simpleType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "variableType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "writeReplace",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.impl.PredefinedGenericType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComponentType",
        "parameterTypes": []
      },
      {
        "name": "getFuncArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getFuncReturnType",
        "parameterTypes": []
      },
      {
        "name": "getGenericType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getGenericType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMapKeyType",
        "parameterTypes": []
      },
      {
        "name": "getMapValueType",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getSuperType",
        "parameterTypes": []
      },
      {
        "name": "getTypeParameters",
        "parameterTypes": []
      },
      {
        "name": "isArray",
        "parameterTypes": []
      },
      {
        "name": "isCollectionLike",
        "parameterTypes": []
      },
      {
        "name": "isFunctionalClass",
        "parameterTypes": []
      },
      {
        "name": "isListLike",
        "parameterTypes": []
      },
      {
        "name": "isMapLike",
        "parameterTypes": []
      },
      {
        "name": "isSetLike",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.impl.PredefinedParameterizedType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComponentType",
        "parameterTypes": []
      },
      {
        "name": "getFuncArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getFuncReturnType",
        "parameterTypes": []
      },
      {
        "name": "getGenericType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getGenericType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMapKeyType",
        "parameterTypes": []
      },
      {
        "name": "getMapValueType",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getSuperType",
        "parameterTypes": []
      },
      {
        "name": "getTypeParameters",
        "parameterTypes": []
      },
      {
        "name": "isCollectionLike",
        "parameterTypes": []
      },
      {
        "name": "isFunctionalClass",
        "parameterTypes": []
      },
      {
        "name": "isListLike",
        "parameterTypes": []
      },
      {
        "name": "isMapLike",
        "parameterTypes": []
      },
      {
        "name": "isSetLike",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.impl.PredefinedRawType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "FIND_FIRST_RANGE"
      }
    ],
    "methods": [
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      }
    ],
    "name": "io.nop.dao.api.AbstractSqlExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "get_id",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.api.IDaoEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.api.ISqlExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": []
      },
      {
        "name": "getDriverMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverName",
        "parameterTypes": []
      },
      {
        "name": "getPdmTargetType",
        "parameterTypes": []
      },
      {
        "name": "getProductName",
        "parameterTypes": []
      },
      {
        "name": "getProductVersion",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "setDialectName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDriverMajorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverMinorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPdmTargetType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.DialectSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isSupportsSequence",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialect",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialectProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildFunctionSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "initDataTypes",
        "parameterTypes": []
      },
      {
        "name": "initFunctions",
        "parameterTypes": []
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isSupportsSequence",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.impl.DialectImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.loader.DialectModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCodeOrName",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSelectCatalogs",
        "parameterTypes": []
      },
      {
        "name": "getSelectConstaints",
        "parameterTypes": []
      },
      {
        "name": "getSelectIndexes",
        "parameterTypes": []
      },
      {
        "name": "getSelectPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getSelectSchemas",
        "parameterTypes": []
      },
      {
        "name": "getSelectSequences",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTables",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViews",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSelectCatalogs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectConstaints",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectIndexes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectPrimaryKeys",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSchemas",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSequences",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTables",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViews",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUseSqlState",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseSqlState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValues",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportILike",
        "parameterTypes": []
      },
      {
        "name": "getSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getSupportNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "getSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "getSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "getSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "getSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "getUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSupportBatchUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportBatchUpdateCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportExecuteLargeUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportILike",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportLargeMaxRows",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportQueryTimeout",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRowValueConstructor",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSavePoint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSequence",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTransaction",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTruncateTable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportWithAsClause",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGetStringForDate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addErrorCode",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "addSqlDataType",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllSchemaPattern",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getDbProductNames",
        "parameterTypes": []
      },
      {
        "name": "getDefaultNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getDiscoverySqls",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "getFeatures",
        "parameterTypes": []
      },
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrlPattern",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getKeywordUnderscore",
        "parameterTypes": []
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getRename",
        "parameterTypes": []
      },
      {
        "name": "getReservedKeywords",
        "parameterTypes": []
      },
      {
        "name": "getSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "getSqlExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "hasErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "hasFunctions",
        "parameterTypes": []
      },
      {
        "name": "hasRename",
        "parameterTypes": []
      },
      {
        "name": "hasSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "keySet_errorCodes",
        "parameterTypes": []
      },
      {
        "name": "keySet_functions",
        "parameterTypes": []
      },
      {
        "name": "keySet_sqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllSchemaPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setDbProductNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDiscoverySqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFeatures",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "setFunctions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGeometryTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrlPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeywordQuote",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setKeywordUnderscore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxBytesSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxStringSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPaginationHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRename",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setReservedKeywords",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSqlDataTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlExceptionTranslator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "setTableNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCreateSequence",
        "parameterTypes": []
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDropSequence",
        "parameterTypes": []
      },
      {
        "name": "getDropTable",
        "parameterTypes": []
      },
      {
        "name": "getEscapeSlash",
        "parameterTypes": []
      },
      {
        "name": "getFalseString",
        "parameterTypes": []
      },
      {
        "name": "getForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getInsertKeyword",
        "parameterTypes": []
      },
      {
        "name": "getLockHint",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDual",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNextVal",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTrueString",
        "parameterTypes": []
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCreateSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEscapeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFalseString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFromDual",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequenceNextVal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrueString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBinder",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isAllowExceedPrecision",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAllowExceedPrecision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowPrecision",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getHasParenthesis",
        "parameterTypes": []
      },
      {
        "name": "getMaxArgCount",
        "parameterTypes": []
      },
      {
        "name": "getMinArgCount",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSpecial",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasParenthesis",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSpecial",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.AbstractPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.IPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.LimitOffsetPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.initialize.DaoDialectInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpaceToDialectConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpaceToDialectMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.dao.jdbc.impl.JdbcDialectProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "callFunc",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDbCurrentTimestamp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "setCacheProvider",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect",
          "java.sql.PreparedStatement",
          "io.nop.core.lang.sql.SQL",
          "boolean"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.jdbc.impl.JdbcTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setEagerReleaseConnection",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.dao.jdbc.txn.JdbcTransactionFactory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginBatchUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beginExecuteUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "beginQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "endBatchUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endExecuteUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endQuery",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "boolean"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRegistry",
        "parameterTypes": []
      },
      {
        "name": "onObtainConnection",
        "parameterTypes": []
      },
      {
        "name": "onTransactionFailure",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionOpen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionSuccess",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.metrics.DaoMetricsImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateLong",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateString",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.dao.seq.UuidSequenceGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "isSupportShard",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selectShard",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "selectShards",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.shard.EmptyShardSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultListener",
        "parameterTypes": []
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionFactory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "setDataSourceMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDefaultFactory",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionFactory"
        ]
      },
      {
        "name": "setDefaultListener",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionListener"
        ]
      },
      {
        "name": "setTransactionFactoryMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionMetrics",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionMetrics"
        ]
      },
      {
        "name": "setTxnGroupMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTxnGroupMapConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.DefaultTransactionManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runInTransaction",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInTransactionAsync",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionManager"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.TransactionTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.dao.txn.interceptor.TransactionalMethodInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setPropagation",
        "parameterTypes": [
          "io.nop.api.core.annotations.txn.TransactionPropagation"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "setTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.utils.TransactionalFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setTransactionalInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.DefaultOperationFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildGraphQLResponse",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "buildRpcResponse",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "buildSelectionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.graphql.core.ast.GraphQLSelectionSet",
          "java.util.Map"
        ]
      },
      {
        "name": "cancel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "executeGraphQLAsync",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "executeRpcAsync",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDocumentCache",
        "parameterTypes": []
      },
      {
        "name": "getExecutionInvoker",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getSchemaLoader",
        "parameterTypes": []
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initGraphQLContext",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext",
          "io.nop.graphql.core.ParsedGraphQLRequest"
        ]
      },
      {
        "name": "initRpcContext",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext",
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String",
          "io.nop.api.core.beans.ApiRequest"
        ]
      },
      {
        "name": "isEnableActionAuth",
        "parameterTypes": []
      },
      {
        "name": "isEnableDataAuth",
        "parameterTypes": []
      },
      {
        "name": "isIntrospection",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperation"
        ]
      },
      {
        "name": "newGraphQLContext",
        "parameterTypes": []
      },
      {
        "name": "newGraphQLContext",
        "parameterTypes": [
          "io.nop.graphql.core.ParsedGraphQLRequest"
        ]
      },
      {
        "name": "newRpcContext",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String",
          "io.nop.api.core.beans.ApiRequest"
        ]
      },
      {
        "name": "parseOperation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "resolveSelection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.graphql.core.ast.GraphQLSelectionSet",
          "java.util.Map"
        ]
      },
      {
        "name": "resolveSelections",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLDocument",
          "int"
        ]
      },
      {
        "name": "setActionAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IActionAuthChecker"
        ]
      },
      {
        "name": "setBuiltinSchema",
        "parameterTypes": [
          "io.nop.graphql.core.schema.GraphQLSchema"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      },
      {
        "name": "setEnableActionAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableDataAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExecutionInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      },
      {
        "name": "setFlowControlRunner",
        "parameterTypes": [
          "io.nop.rpc.api.flowcontrol.IFlowControlRunner"
        ]
      },
      {
        "name": "setGraphQLHook",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLHook"
        ]
      },
      {
        "name": "setOperationInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      },
      {
        "name": "setSchemaLoader",
        "parameterTypes": [
          "io.nop.graphql.core.schema.IGraphQLSchemaLoader"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.GraphQLEngine",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "dispatchAll",
        "parameterTypes": []
      },
      {
        "name": "getDataLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldSelection",
        "parameterTypes": []
      },
      {
        "name": "getOperation",
        "parameterTypes": []
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      },
      {
        "name": "isMakerCheckerEnabled",
        "parameterTypes": []
      },
      {
        "name": "registerDataLoader",
        "parameterTypes": [
          "java.lang.String",
          "org.dataloader.DataLoader"
        ]
      },
      {
        "name": "setFieldSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setMakerCheckerEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOperation",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperation"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.GraphQLExecutionContext",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.graphql.core.initialize.GraphQLCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getIsRepeatable",
        "parameterTypes": []
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsRepeatable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__Directive",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeprecationReason",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getIsDeprecated",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecationReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsDeprecated",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__Type"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__Field",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__Type"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__InputValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getEnumValues",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getInputFields",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOfType",
        "parameterTypes": []
      },
      {
        "name": "getPossibleTypes",
        "parameterTypes": []
      },
      {
        "name": "getSpecifiedBy",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnumValues",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInputFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__TypeKind"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOfType",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__Type"
        ]
      },
      {
        "name": "setPossibleTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSpecifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__Type",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "cancel",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.CancelRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.graphql.core.web.SysBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLObjectDefinition",
          "java.lang.String",
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.graphql.orm.OrmBizInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ignoreSslCerts"
      }
    ],
    "methods": [
      {
        "name": "getConnectTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDnsResolver",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getHostnameVerifier",
        "parameterTypes": []
      },
      {
        "name": "getHttpProxy",
        "parameterTypes": []
      },
      {
        "name": "getHttpsProxy",
        "parameterTypes": []
      },
      {
        "name": "getKeepAliveDuration",
        "parameterTypes": []
      },
      {
        "name": "getKeyManagers",
        "parameterTypes": []
      },
      {
        "name": "getLogLevel",
        "parameterTypes": []
      },
      {
        "name": "getMaxConnTotal",
        "parameterTypes": []
      },
      {
        "name": "getMaxIdleCount",
        "parameterTypes": []
      },
      {
        "name": "getMaxIdleTime",
        "parameterTypes": []
      },
      {
        "name": "getMaxRequestsPerHost",
        "parameterTypes": []
      },
      {
        "name": "getMaxResultLength",
        "parameterTypes": []
      },
      {
        "name": "getNoProxy",
        "parameterTypes": []
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSecureRandom",
        "parameterTypes": []
      },
      {
        "name": "getSslSocketFactory",
        "parameterTypes": []
      },
      {
        "name": "getThreadName",
        "parameterTypes": []
      },
      {
        "name": "getThreadPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getWriteTimeout",
        "parameterTypes": []
      },
      {
        "name": "getX509TrustManagers",
        "parameterTypes": []
      },
      {
        "name": "isFollowRedirects",
        "parameterTypes": []
      },
      {
        "name": "isHttp2",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreSslCerts",
        "parameterTypes": []
      },
      {
        "name": "isLogBody",
        "parameterTypes": []
      },
      {
        "name": "isPrettyJson",
        "parameterTypes": []
      },
      {
        "name": "isRetryOnConnectionFailure",
        "parameterTypes": []
      },
      {
        "name": "isUseSsl",
        "parameterTypes": []
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDnsResolver",
        "parameterTypes": [
          "io.nop.http.api.IDnsResolver"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "setFollowRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHostnameVerifier",
        "parameterTypes": [
          "javax.net.ssl.HostnameVerifier"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHttpProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpsProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreSslCerts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepAliveDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeyManagers",
        "parameterTypes": [
          "[Ljavax.net.ssl.KeyManager;"
        ]
      },
      {
        "name": "setLogBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogLevel",
        "parameterTypes": [
          "io.nop.api.core.util.LogLevel"
        ]
      },
      {
        "name": "setMaxConnTotal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxRequestsPerHost",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxResultLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNoProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrettyJson",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRetryOnConnectionFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSecureRandom",
        "parameterTypes": [
          "java.security.SecureRandom"
        ]
      },
      {
        "name": "setSslSocketFactory",
        "parameterTypes": [
          "javax.net.ssl.SSLSocketFactory"
        ]
      },
      {
        "name": "setThreadName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWriteTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setX509TrustManagers",
        "parameterTypes": [
          "[Ljavax.net.ssl.X509TrustManager;"
        ]
      }
    ],
    "name": "io.nop.http.api.client.HttpClientConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getPropagateHeaders",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "initContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.http.api.server.ContextHttpServerFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "downloadAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.http.api.client.IHttpOutputFile",
          "io.nop.http.api.client.DownloadOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "fetchAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "newSSLContext",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toBody",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "toHttpResponse",
        "parameterTypes": [
          "java.net.http.HttpResponse"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": [
          "java.net.http.HttpHeaders"
        ]
      },
      {
        "name": "toURI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uploadAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.http.api.client.IHttpInputFile",
          "io.nop.http.api.client.UploadOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "wrapError",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "io.nop.http.client.jdk.JdkHttpClient",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.initialize.IocCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanCollectBeansValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanCollectionValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addMissingBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanConditionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstantModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstructorArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanIfPropertyCondition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanInterceptorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanListValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAnnotationClasses",
        "parameterTypes": []
      },
      {
        "name": "setAnnotationClasses",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanPointcutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropertyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanRefValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanSimpleValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArgCount",
        "parameterTypes": []
      },
      {
        "name": "getEmbeddedId",
        "parameterTypes": []
      },
      {
        "name": "setEmbeddedId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeansModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.IBeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getByAnnotation",
        "parameterTypes": []
      },
      {
        "name": "getByType",
        "parameterTypes": []
      },
      {
        "name": "getExcludeTag",
        "parameterTypes": []
      },
      {
        "name": "getIncludeTag",
        "parameterTypes": []
      },
      {
        "name": "getNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "isAsMap",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "isOnlyConcreteClasses",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setByAnnotation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setByType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIncludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyConcreteClasses",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanCollectBeansValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "isMerge",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMerge",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanCollectionValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIfProperty",
        "parameterTypes": []
      },
      {
        "name": "getMissingBean",
        "parameterTypes": []
      },
      {
        "name": "getMissingClass",
        "parameterTypes": []
      },
      {
        "name": "getMissingResource",
        "parameterTypes": []
      },
      {
        "name": "getOnBean",
        "parameterTypes": []
      },
      {
        "name": "getOnBeanType",
        "parameterTypes": []
      },
      {
        "name": "getOnClass",
        "parameterTypes": []
      },
      {
        "name": "getOnExpr",
        "parameterTypes": []
      },
      {
        "name": "getOnMissingBeanType",
        "parameterTypes": []
      },
      {
        "name": "getOnResource",
        "parameterTypes": []
      },
      {
        "name": "getUnlessProperty",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIfProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "setMissingBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnBeanType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setOnMissingBeanType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUnlessProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanUnlessPropertyCondition"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConditionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getStaticField",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticField",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstantModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstructorArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfMissing",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setEnableIfMissing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanIfPropertyCondition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBean",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanInterceptorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getListClass",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setListClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanListValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIocPointcut",
        "parameterTypes": []
      },
      {
        "name": "getIocPriority",
        "parameterTypes": []
      },
      {
        "name": "getIocTags",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocPointcut",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "setIocPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIocTags",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAnnotations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPointcutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "io.nop.ioc.model.IBeanPropValue"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropertyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBean",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanRefValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanSimpleValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addConstructorArg",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "addIocInterceptor",
        "parameterTypes": [
          "io.nop.ioc.model.BeanInterceptorModel"
        ]
      },
      {
        "name": "addProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAutowire",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDestroyMethod",
        "parameterTypes": []
      },
      {
        "name": "getFactoryBean",
        "parameterTypes": []
      },
      {
        "name": "getFactoryMethod",
        "parameterTypes": []
      },
      {
        "name": "getInitMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocAfter",
        "parameterTypes": []
      },
      {
        "name": "getIocBeanMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocBefore",
        "parameterTypes": []
      },
      {
        "name": "getIocBuild",
        "parameterTypes": []
      },
      {
        "name": "getIocCondition",
        "parameterTypes": []
      },
      {
        "name": "getIocConfigPrefix",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayStart",
        "parameterTypes": []
      },
      {
        "name": "getIocDestroy",
        "parameterTypes": []
      },
      {
        "name": "getIocInit",
        "parameterTypes": []
      },
      {
        "name": "getIocInitOrder",
        "parameterTypes": []
      },
      {
        "name": "getIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getIocOnConfigRefresh",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfig",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfigMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocRestart",
        "parameterTypes": []
      },
      {
        "name": "getIocRestartMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getIocType",
        "parameterTypes": []
      },
      {
        "name": "getLazyInit",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "hasConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "hasIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "hasProperties",
        "parameterTypes": []
      },
      {
        "name": "hasProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAutowireCandidate",
        "parameterTypes": []
      },
      {
        "name": "isIocAop",
        "parameterTypes": []
      },
      {
        "name": "isIocAutoRefresh",
        "parameterTypes": []
      },
      {
        "name": "isIocProxy",
        "parameterTypes": []
      },
      {
        "name": "keySet_constructorArgs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "keySet_properties",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutowire",
        "parameterTypes": [
          "io.nop.ioc.model.AutowireType"
        ]
      },
      {
        "name": "setAutowireCandidate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstructorArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDestroyMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAfter",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocAop",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocAutoRefresh",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocBeanMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocBefore",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocBuild",
        "parameterTypes": [
          "io.nop.ioc.model.BeanBuildModel"
        ]
      },
      {
        "name": "setIocCondition",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "setIocConfigPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayStart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocDestroy",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocInit",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocInitOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocOnConfigRefresh",
        "parameterTypes": [
          "io.nop.ioc.model.BeanOnConfigRefresh"
        ]
      },
      {
        "name": "setIocProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocRefreshConfig",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRefreshConfigMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocRestart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRestartMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "addBean",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "addEntry",
        "parameterTypes": [
          "io.nop.ioc.model.BeanMapModel"
        ]
      },
      {
        "name": "addImport",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "addIocConfig",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConfigModel"
        ]
      },
      {
        "name": "addIocListener",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListenerModel"
        ]
      },
      {
        "name": "addUtilConstant",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "addUtilList",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListModel"
        ]
      },
      {
        "name": "addUtilMap",
        "parameterTypes": [
          "io.nop.ioc.model.BeanMapModel"
        ]
      },
      {
        "name": "addUtilSet",
        "parameterTypes": [
          "io.nop.ioc.model.BeanSetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImports",
        "parameterTypes": []
      },
      {
        "name": "getIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "getIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocListeners",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "getUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilLists",
        "parameterTypes": []
      },
      {
        "name": "getUtilMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "getUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilSets",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBeans",
        "parameterTypes": []
      },
      {
        "name": "hasEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImports",
        "parameterTypes": []
      },
      {
        "name": "hasIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "hasIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocListeners",
        "parameterTypes": []
      },
      {
        "name": "hasUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "hasUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilLists",
        "parameterTypes": []
      },
      {
        "name": "hasUtilMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "hasUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilSets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultLazyInit",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_beans",
        "parameterTypes": []
      },
      {
        "name": "keySet_imports",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocConfigs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocListeners",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilConstants",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilLists",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilMaps",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilSets",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setImports",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocConfigs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUtilConstants",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilLists",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilMaps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilSets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeansModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.ioc.support.UtilFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reinitWorkers",
        "parameterTypes": []
      },
      {
        "name": "setInitScriptPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsLibLoader",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "setWorkerCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.js.engine.JavaScriptService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "bindToEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.util.Map"
        ]
      },
      {
        "name": "flushToEntity",
        "parameterTypes": []
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.IOrmComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_addPkWatcher",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "orm_attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntityEnhancer"
        ]
      },
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_computed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "orm_detach",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyNewValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyOldValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyPropIds",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_flushComponent",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_forEachDirtyProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forEachInitedProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_fullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_inited",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_locked",
        "parameterTypes": []
      },
      {
        "name": "orm_locked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_markFullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propInited",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propOldValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": [
          "io.nop.orm.OrmEntityState"
        ]
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      },
      {
        "name": "orm_unload",
        "parameterTypes": []
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_useOldValues",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.IOrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmEntityLifecycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBoolean",
        "parameterTypes": []
      },
      {
        "name": "getByte",
        "parameterTypes": []
      },
      {
        "name": "getChar",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDatetime",
        "parameterTypes": []
      },
      {
        "name": "getDecimal",
        "parameterTypes": []
      },
      {
        "name": "getDouble",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getFloat",
        "parameterTypes": []
      },
      {
        "name": "getInt",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": []
      },
      {
        "name": "getShort",
        "parameterTypes": []
      },
      {
        "name": "getString",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByte",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setChar",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDatetime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDouble",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFloat",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setInt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLong",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setShort",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.IOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_enhancer",
        "parameterTypes": []
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.IOrmObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "dao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "daoForTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.dao.OrmDaoProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "enhanceBinder",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.IColumnModel",
          "io.nop.core.lang.sql.binder.IDataParameterBinder"
        ]
      },
      {
        "name": "enhanceBinder",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.IColumnModel",
          "io.nop.dataset.binder.IDataParameterBinder"
        ]
      },
      {
        "name": "setTextCipher",
        "parameterTypes": [
          "io.nop.commons.crypto.ITextCipher"
        ]
      }
    ],
    "name": "io.nop.orm.factory.DefaultOrmColumnBinderEnhancer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reloadOrmModel",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.OrmSessionFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanProvider",
        "parameterTypes": []
      },
      {
        "name": "getColumnBinderEnhancer",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDynamicEntityClass",
        "parameterTypes": []
      },
      {
        "name": "getDefaultQueryExecutor",
        "parameterTypes": []
      },
      {
        "name": "getDialectProvider",
        "parameterTypes": []
      },
      {
        "name": "getDynamicEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getEntityClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getEqlAstTransformer",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getJdbcTemplate",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getQueryExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getQueryExecutors",
        "parameterTypes": []
      },
      {
        "name": "getSequenceGenerator",
        "parameterTypes": []
      },
      {
        "name": "getShardSelector",
        "parameterTypes": []
      },
      {
        "name": "isRegisterGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "setBeanProvider",
        "parameterTypes": [
          "io.nop.api.core.ioc.IBeanProvider"
        ]
      },
      {
        "name": "setColumnBinderEnhancer",
        "parameterTypes": [
          "io.nop.orm.IOrmColumnBinderEnhancer"
        ]
      },
      {
        "name": "setColumnBinderEnhancer",
        "parameterTypes": [
          "io.nop.orm.eql.binder.IOrmColumnBinderEnhancer"
        ]
      },
      {
        "name": "setDefaultDynamicEntityClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultQueryExecutor",
        "parameterTypes": [
          "io.nop.orm.loader.IQueryExecutor"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setDynamicEntityNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEntityClassLoader",
        "parameterTypes": [
          "io.nop.commons.lang.IClassLoader"
        ]
      },
      {
        "name": "setEqlAstTransformer",
        "parameterTypes": [
          "io.nop.orm.eql.IEqlAstTransformer"
        ]
      },
      {
        "name": "setGlobalCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrmModel",
        "parameterTypes": [
          "io.nop.orm.model.IOrmModel"
        ]
      },
      {
        "name": "setQueryExecutors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegisterGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSequenceGenerator",
        "parameterTypes": [
          "io.nop.dao.seq.ISequenceGenerator"
        ]
      },
      {
        "name": "setShardSelector",
        "parameterTypes": [
          "io.nop.dao.shard.IShardSelector"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.factory.SessionFactoryConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.XplOrmInterceptorFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "assembleAllCollectionInMemory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "assembleCollectionInMemory",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "assembleSelectionInMemory",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadProps",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadSelection",
        "parameterTypes": [
          "java.util.Collection",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "batchSaveOrUpdate",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "cachePut",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheRemove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "castId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "castIds",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "clearGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "clearGlobalCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryPlanCache",
        "parameterTypes": []
      },
      {
        "name": "clearSession",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "currentSession",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "deleteDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "evict",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "evictAll",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "existsByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "findFirstByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findFirstByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "findListByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findListByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "flushSession",
        "parameterTypes": []
      },
      {
        "name": "forStateless",
        "parameterTypes": []
      },
      {
        "name": "forceLoad",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getFullEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getSessionFactory",
        "parameterTypes": []
      },
      {
        "name": "initEntityId",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "isValidEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "newEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "registerSession",
        "parameterTypes": [
          "io.nop.orm.IOrmSession"
        ]
      },
      {
        "name": "requireSession",
        "parameterTypes": []
      },
      {
        "name": "runInNewSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInNewSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveOrUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "sessionCache",
        "parameterTypes": []
      },
      {
        "name": "setSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "unregisterSession",
        "parameterTypes": []
      },
      {
        "name": "updateDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      }
    ],
    "name": "io.nop.orm.impl.OrmTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "splitByQuerySpace",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.orm.initialize.DataBaseSchemaInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.initialize.OrmCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.orm.interceptor.SingleSessionMethodInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model.IEntityPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityRelationModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IOrmDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IPdmElement",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getSqlType",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumnRefs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIdMap",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "requireProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumnModel",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "setColumnModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmComponentPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isCompositePk",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmCompositePKModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAllColumnPrimary",
        "parameterTypes": []
      },
      {
        "name": "setPkColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRevLatestKeyColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLeftPropModel",
        "parameterTypes": []
      },
      {
        "name": "getLeftType",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRightPropModel",
        "parameterTypes": []
      },
      {
        "name": "getRightType",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "setLeftPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "setRightPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModels",
        "parameterTypes": []
      },
      {
        "name": "getEntityModelsInTopoOrder",
        "parameterTypes": []
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getTopoEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAnyEntityUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isMerged",
        "parameterTypes": []
      },
      {
        "name": "setMerged",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addJoinOn",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDynamicRelation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setRefEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setRefPropIds",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "setSingleColumnJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "setCollectionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "setOneToOne",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumnModels",
        "parameterTypes": []
      },
      {
        "name": "setColumnModels",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmUniqueKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getFixedValue",
        "parameterTypes": []
      },
      {
        "name": "getJsonPath",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeSqlType",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getUiHint",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixedValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJsonPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNativeSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUiHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentPropModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isNeedFlush",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "keySet_props",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNeedFlush",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumn",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmComponentPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.orm.model.OrmAliasModel"
        ]
      },
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "addComponent",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "addCompute",
        "parameterTypes": [
          "io.nop.orm.model.OrmComputePropModel"
        ]
      },
      {
        "name": "addIndex",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "addUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getCreaterProp",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbPkName",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDimensionalType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getLabelProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getShardProp",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStateProp",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTenantProp",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterProp",
        "parameterTypes": []
      },
      {
        "name": "getVersionProp",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "hasComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComponents",
        "parameterTypes": []
      },
      {
        "name": "hasCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComputes",
        "parameterTypes": []
      },
      {
        "name": "hasIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIndexes",
        "parameterTypes": []
      },
      {
        "name": "hasRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRelations",
        "parameterTypes": []
      },
      {
        "name": "hasUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isUseWorkflow",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "keySet_components",
        "parameterTypes": []
      },
      {
        "name": "keySet_computes",
        "parameterTypes": []
      },
      {
        "name": "keySet_indexes",
        "parameterTypes": []
      },
      {
        "name": "keySet_relations",
        "parameterTypes": []
      },
      {
        "name": "keySet_uniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckVersionWhenLazyLoad",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComputes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCreateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbPkName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteFlagProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimensionalType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityModeEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIndexes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKvTable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShortName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShardProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStateProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableView",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpdateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseRevision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseShard",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTenant",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseWorkflow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLeftProp",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": []
      },
      {
        "name": "getRightProp",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLeftProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeftValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRightProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDict",
        "parameterTypes": [
          "io.nop.api.core.beans.DictBean"
        ]
      },
      {
        "name": "addDomain",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "addEntity",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "addPackage",
        "parameterTypes": [
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getEntities",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "hasDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDicts",
        "parameterTypes": []
      },
      {
        "name": "hasDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDomains",
        "parameterTypes": []
      },
      {
        "name": "hasEntities",
        "parameterTypes": []
      },
      {
        "name": "hasEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackages",
        "parameterTypes": []
      },
      {
        "name": "keySet_dicts",
        "parameterTypes": []
      },
      {
        "name": "keySet_domains",
        "parameterTypes": []
      },
      {
        "name": "keySet_entities",
        "parameterTypes": []
      },
      {
        "name": "keySet_packages",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEntities",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isEmbedded",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbedded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoin",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "setReverseDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmUniqueKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel",
          "io.nop.core.lang.xml.XNode",
          "boolean"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.pdm.PdmModelParser$RefInfo"
        ]
      },
      {
        "name": "codeToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectRefInfo",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getChildrenPropName",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel",
          "boolean"
        ]
      },
      {
        "name": "getColumnDomain",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getDialect",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getJoinColumn",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "getRefColDisplayName",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "getRefColPropName",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel",
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "getReferenceTable",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getShortcutTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTarget",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isAllPrimaryCol",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "matchTargetType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeRefInfo",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "parseAllReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseColumnTag",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseColumns",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseDataType",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseDimension",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseDomains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseIndex",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseIndexes",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseKey",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel",
          "java.lang.String"
        ]
      },
      {
        "name": "parseKeys",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parsePackage",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parsePackages",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseRefInfo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseRelationDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseShortcut",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.pdm.PdmElementType"
        ]
      },
      {
        "name": "parseTable",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseTables",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseView",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseViewReference",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseViewReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseViews",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "removeViewsNoPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.pdm.PdmModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateSql",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.EqlSqlItemModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.sql_lib.SqlItemArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildBeanMapper",
        "parameterTypes": [
          "io.nop.core.type.IGenericType",
          "boolean"
        ]
      },
      {
        "name": "buildRowMapper",
        "parameterTypes": [
          "io.nop.dao.api.ISqlExecutor",
          "java.lang.String"
        ]
      },
      {
        "name": "buildSql",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkArgs",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "generateSql",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "getSqlLibModel",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.dao.api.ISqlExecutor",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "isColNameCamelCase",
        "parameterTypes": []
      },
      {
        "name": "processResult",
        "parameterTypes": [
          "java.util.List",
          "io.nop.dao.api.ISqlExecutor"
        ]
      },
      {
        "name": "setSqlLibModel",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlLibModel"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlItemModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildSql",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkAllLibValid",
        "parameterTypes": []
      },
      {
        "name": "checkAuth",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkLibValid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkProxyMethods",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createProxy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlLibManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildFragment",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "requireSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlLibModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "execute"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "exists"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findAll"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findFirst"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findPage"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlGenerator"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib._gen._EqlSqlItemModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getMandatory",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib._gen._SqlItemArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemArgModel"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlFieldModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getBatchLoadSelection",
        "parameterTypes": []
      },
      {
        "name": "getCacheKeyExpr",
        "parameterTypes": []
      },
      {
        "name": "getCacheName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getFetchSize",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRowType",
        "parameterTypes": []
      },
      {
        "name": "getSqlMethod",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidateInput",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isDisableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setBatchLoadSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setCacheKeyExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setCacheName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSqlMethod",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlMethod"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidateInput",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib._gen._SqlItemModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFragment",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlFragmentModel"
        ]
      },
      {
        "name": "addSql",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getFragment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFragments",
        "parameterTypes": []
      },
      {
        "name": "getSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "hasFragment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFragments",
        "parameterTypes": []
      },
      {
        "name": "hasSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSqls",
        "parameterTypes": []
      },
      {
        "name": "keySet_fragments",
        "parameterTypes": []
      },
      {
        "name": "keySet_sqls",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setFragments",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqls",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib._gen._SqlLibModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkDictSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setSqlLibManager",
        "parameterTypes": [
          "io.nop.orm.sql_lib.ISqlLibManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.dict.SqlLibDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "getMapperClass",
        "parameterTypes": []
      },
      {
        "name": "setMapperClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSqlLibManager",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlLibManager"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.proxy.SqlLibProxyFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "bindToEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.util.Map"
        ]
      },
      {
        "name": "flushToEntity",
        "parameterTypes": []
      },
      {
        "name": "internalGetPropValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalSetPropValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_owner",
        "parameterTypes": []
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.support.AbstractOrmComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBigIntValue",
        "parameterTypes": []
      },
      {
        "name": "getBoolean",
        "parameterTypes": []
      },
      {
        "name": "getBooleanValue",
        "parameterTypes": []
      },
      {
        "name": "getByte",
        "parameterTypes": []
      },
      {
        "name": "getByteValue",
        "parameterTypes": []
      },
      {
        "name": "getChar",
        "parameterTypes": []
      },
      {
        "name": "getCharValue",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeValue",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDatetime",
        "parameterTypes": []
      },
      {
        "name": "getDecimal",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getDouble",
        "parameterTypes": []
      },
      {
        "name": "getDoubleValue",
        "parameterTypes": []
      },
      {
        "name": "getFloat",
        "parameterTypes": []
      },
      {
        "name": "getFloatValue",
        "parameterTypes": []
      },
      {
        "name": "getInt",
        "parameterTypes": []
      },
      {
        "name": "getIntValue",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": []
      },
      {
        "name": "getLongValue",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getShort",
        "parameterTypes": []
      },
      {
        "name": "getShortValue",
        "parameterTypes": []
      },
      {
        "name": "getString",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBigIntValue",
        "parameterTypes": [
          "java.math.BigInteger"
        ]
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBooleanValue",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByte",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setByteValue",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setChar",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setCharValue",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDateTimeValue",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDatetime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDouble",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDoubleValue",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFloat",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setFloatValue",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setInt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIntValue",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLong",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLongValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNullValue",
        "parameterTypes": []
      },
      {
        "name": "setShort",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setShortValue",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.support.AbstractOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalGetAliasValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetRefEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetAliasValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "internalSetRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_refEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "requireValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.DynamicOrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NOT_INITED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME__jsonText"
      }
    ],
    "methods": [
      {
        "name": "flushToEntity",
        "parameterTypes": []
      },
      {
        "name": "getStringList",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "get_jsonText",
        "parameterTypes": []
      },
      {
        "name": "get_jsonValue",
        "parameterTypes": []
      },
      {
        "name": "isJsonList",
        "parameterTypes": []
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setStringList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "set_jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "set_jsonValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.support.JsonOrmComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCompositeId",
        "parameterTypes": [
          "java.util.List",
          "[I"
        ]
      },
      {
        "name": "buildSimpleId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkPropIdRange",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkReadonly",
        "parameterTypes": []
      },
      {
        "name": "defaultGetProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "defaultSetProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "forcePropLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "get_t",
        "parameterTypes": []
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalNotifyPkWatcher",
        "parameterTypes": []
      },
      {
        "name": "make_t",
        "parameterTypes": []
      },
      {
        "name": "markPropAccessed",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "markPropDirty",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "newBitSet",
        "parameterTypes": []
      },
      {
        "name": "newEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "newTypeConversionError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newValuesMap",
        "parameterTypes": []
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "onInitProp",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropGet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_addPkWatcher",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "orm_attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntityEnhancer"
        ]
      },
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_computed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "orm_detach",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyNewValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyOldValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyPropIds",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_enhancer",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_flushComponent",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_forEachDirtyProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forEachInitedProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_fullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_inited",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_locked",
        "parameterTypes": []
      },
      {
        "name": "orm_locked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_markFullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propInited",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propOldValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": [
          "io.nop.orm.OrmEntityState"
        ]
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      },
      {
        "name": "orm_unload",
        "parameterTypes": []
      },
      {
        "name": "orm_useOldValues",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "requireEnhancer",
        "parameterTypes": []
      },
      {
        "name": "requireEntityModel",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.OrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "onAfterCompletion",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction",
          "io.nop.dao.txn.ITransactionListener$CompleteStatus",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "onBeforeCommit",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.txn.OrmTransactionListener",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.utils.SingleSessionFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "applyConfig",
        "parameterTypes": [
          "io.agroal.api.configuration.supplier.AgroalDataSourceConfigurationSupplier"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.nop.quarkus.core.dao.DataSourceConfig"
        ]
      }
    ],
    "name": "io.nop.quarkus.core.dao.AgroalDataSourceFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAcquisitionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getBackgroundValidationInterval",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getIdleRemovalInterval",
        "parameterTypes": []
      },
      {
        "name": "getInitialSize",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getMinSize",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuerySql",
        "parameterTypes": []
      },
      {
        "name": "isMetricsEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAcquisitionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBackgroundValidationInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdleRemovalInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuerySql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.quarkus.core.dao.DataSourceConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.sys.dao.dict.SysDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDict",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDictOption",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysExtField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysI18n",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysMakerCheckerRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysNoticeTemplate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysSequence",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNormalizedValue",
        "parameterTypes": []
      },
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysUserVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_codePattern"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_codePattern"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCodePattern",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSeqName",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictOptions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDictName",
        "parameterTypes": []
      },
      {
        "name": "getDictOptions",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDictName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDict",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_codeValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_groupName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isDeprecated"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isInternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_codeValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dict"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isDeprecated"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isInternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCodeValue",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDictId",
        "parameterTypes": []
      },
      {
        "name": "getGroupName",
        "parameterTypes": []
      },
      {
        "name": "getIsDeprecated",
        "parameterTypes": []
      },
      {
        "name": "getIsInternal",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "io.nop.sys.dao.entity.NopSysDict"
        ]
      },
      {
        "name": "setDictId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsDeprecated",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsInternal",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDictOption",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalScale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalScale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getEntityId",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setEntityId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysExtField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_i18nKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_i18nLocale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_i18nKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_i18nLocale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getI18nKey",
        "parameterTypes": []
      },
      {
        "name": "getI18nLocale",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setI18nKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setI18nLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysI18n",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cancelAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cbErrCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ceErrMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_inputPage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_makerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_makerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tryResult"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cancelAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cbErrCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ceErrMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_inputPage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_makerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_makerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tryResult"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCancelAction",
        "parameterTypes": []
      },
      {
        "name": "getCbErrCode",
        "parameterTypes": []
      },
      {
        "name": "getCeErrMsg",
        "parameterTypes": []
      },
      {
        "name": "getCheckTime",
        "parameterTypes": []
      },
      {
        "name": "getCheckerId",
        "parameterTypes": []
      },
      {
        "name": "getCheckerName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getInputPage",
        "parameterTypes": []
      },
      {
        "name": "getMakerId",
        "parameterTypes": []
      },
      {
        "name": "getMakerName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRequestAction",
        "parameterTypes": []
      },
      {
        "name": "getRequestData",
        "parameterTypes": []
      },
      {
        "name": "getRequestTime",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResult",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCancelAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCbErrCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCeErrMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCheckerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInputPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTryResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysMakerCheckerRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tplType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extFields"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tplType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getExtFields",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getTplType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTplType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysNoticeTemplate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cacheSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isUuid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_maxValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nextValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resetType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cacheSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isUuid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_maxValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resetType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCacheSize",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getIsUuid",
        "parameterTypes": []
      },
      {
        "name": "getMaxValue",
        "parameterTypes": []
      },
      {
        "name": "getNextValue",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResetType",
        "parameterTypes": []
      },
      {
        "name": "getSeqName",
        "parameterTypes": []
      },
      {
        "name": "getSeqType",
        "parameterTypes": []
      },
      {
        "name": "getStepSize",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCacheSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsUuid",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setMaxValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNextValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResetType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSeqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysSequence",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "getVarType",
        "parameterTypes": []
      },
      {
        "name": "getVarValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysUserVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "getVarType",
        "parameterTypes": []
      },
      {
        "name": "getVarValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.i18n.SysI18nMessageLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ormTemplate"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "transactionTemplate"
      }
    ],
    "methods": [
      {
        "name": "addDefaultSequence",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "findSeqItem",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "generateLong",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateString",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "lazyInit",
        "parameterTypes": []
      },
      {
        "name": "loadCacheItemFromDb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runLocal",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "syncFromDb",
        "parameterTypes": [
          "io.nop.sys.dao.seq.SysSequenceGenerator$SeqItem"
        ]
      }
    ],
    "name": "io.nop.sys.dao.seq.SysSequenceGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysCodeRuleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysDictBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysDictOptionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysExtFieldBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysI18nBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysMakerCheckerRecordBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysNoticeTemplateBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysSequenceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getVar",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.sys.service.entity.NopSysUserVariableBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysVariableBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "pageProvider"
      }
    ],
    "methods": [
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "rollbackPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "savePageSource",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.web.biz.PageProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "jsProvider"
      }
    ],
    "methods": [
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "rollbackJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.biz.SystemJsProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "generateFromXjs",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.ModuleJsLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "pageProvider"
      }
    ],
    "methods": [
      {
        "name": "setPageProvider",
        "parameterTypes": [
          "io.nop.web.page.PageProvider"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.PageModelValidator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cleanupJson",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPageDelta",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "getPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueResolverCompilerRegistry",
        "parameterTypes": []
      },
      {
        "name": "hasXuiAuth",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "parseViewModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerXPage",
        "parameterTypes": []
      },
      {
        "name": "registerXView",
        "parameterTypes": []
      },
      {
        "name": "savePageSource",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setRolePermissionMapping",
        "parameterTypes": [
          "io.nop.api.core.auth.IRolePermissionMapping"
        ]
      },
      {
        "name": "transformPermissions",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateAllPages",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.PageProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "rollback",
        "parameterTypes": [
          "java.lang.String",
          "java.security.Timestamp"
        ]
      },
      {
        "name": "setResourceHistory",
        "parameterTypes": [
          "io.nop.core.resource.IResourceHistory"
        ]
      },
      {
        "name": "setResourceLockManager",
        "parameterTypes": [
          "io.nop.commons.concurrent.lock.IResourceLockManager"
        ]
      },
      {
        "name": "withHistorySupport",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "withHistorySupport",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.web.page.ResourceWithHistoryProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "dumpResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "emptyFile",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "registerJs",
        "parameterTypes": []
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setJsFunctionService",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionService"
        ]
      }
    ],
    "name": "io.nop.web.page.SystemJsProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addClassName",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkJsFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkPageFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeGraphQL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fixPage",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "internalLoadPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeGeneratedId",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeNullEntry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "unfixPage",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.web.page.WebPageHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "html"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "node"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "none"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "sql"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "text"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "textMap"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xjson"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xml"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowTextOut",
        "parameterTypes": []
      },
      {
        "name": "isXmlOrHtml",
        "parameterTypes": []
      },
      {
        "name": "requireFromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangOutputMode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.debugger.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "IF",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "SWITCH",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "assign",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "eval",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalAction",
          "java.util.Map"
        ]
      },
      {
        "name": "eval_node",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "g_current_locale",
        "parameterTypes": []
      },
      {
        "name": "g_default_locale",
        "parameterTypes": []
      },
      {
        "name": "g_make_node",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "inject",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.Object"
        ]
      },
      {
        "name": "jpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "location",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "masked",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "optional",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "order_by",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "raw",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selection",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval2",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "today",
        "parameterTypes": []
      },
      {
        "name": "tpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "track",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.GlobalFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "logDebug",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logInfo",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logTrace",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logWarn",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.LogFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.RegisterModelCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "reparse",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "v",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.DebugHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.AbstractDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.IXDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IListSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IMapSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isInterface",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.IObjSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRefResolved",
        "parameterTypes": []
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchemaNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISimpleSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IUnionSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadXDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadXMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "validateNode",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.xlang.xdef.IXDefNode",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.SchemaLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjConditionExpr",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefinedObjSchemas",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getRootSchema",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "transform",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaToXDef",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL_AUTH"
      }
    ],
    "methods": [
      {
        "name": "getChildName",
        "parameterTypes": []
      },
      {
        "name": "getReadAuth",
        "parameterTypes": []
      },
      {
        "name": "getWriteAuth",
        "parameterTypes": []
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjPropMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjSchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjTreeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeMax",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeMin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExplicitDefine",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItemSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapValueSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMinItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultipleOf",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOneOf",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjConditionExpr",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDefine",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "addKey",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjKeyModel"
        ]
      },
      {
        "name": "addSelection",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjSelectionMeta"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultExtends",
        "parameterTypes": []
      },
      {
        "name": "getDefine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefines",
        "parameterTypes": []
      },
      {
        "name": "getDisplayProp",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeys",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getParseForHtml",
        "parameterTypes": []
      },
      {
        "name": "getParseKeepComment",
        "parameterTypes": []
      },
      {
        "name": "getParserClass",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getPropNs",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelections",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTree",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getXmlName",
        "parameterTypes": []
      },
      {
        "name": "hasDefine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDefines",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasKeys",
        "parameterTypes": []
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSelections",
        "parameterTypes": []
      },
      {
        "name": "keySet_defines",
        "parameterTypes": []
      },
      {
        "name": "keySet_keys",
        "parameterTypes": []
      },
      {
        "name": "keySet_orderBy",
        "parameterTypes": []
      },
      {
        "name": "keySet_selections",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultExtends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefines",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setParseForHtml",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParseKeepComment",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParserClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryKey",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPropNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSelections",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTree",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjTreeModel"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropArgModel"
        ]
      },
      {
        "name": "addAuth",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllowCpExpr",
        "parameterTypes": []
      },
      {
        "name": "getAllowFilterOp",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuths",
        "parameterTypes": []
      },
      {
        "name": "getAutoExpr",
        "parameterTypes": []
      },
      {
        "name": "getChildName",
        "parameterTypes": []
      },
      {
        "name": "getChildXmlName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultOverride",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getGetter",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMapTo",
        "parameterTypes": []
      },
      {
        "name": "getMapToProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSetter",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTransformIn",
        "parameterTypes": []
      },
      {
        "name": "getTransformOut",
        "parameterTypes": []
      },
      {
        "name": "getXmlName",
        "parameterTypes": []
      },
      {
        "name": "getXmlPos",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAuths",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPublished",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "isReadable",
        "parameterTypes": []
      },
      {
        "name": "isSortable",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_auths",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllowCpExpr",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowFilterOp",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setAuths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAutoExpr",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjConditionExpr"
        ]
      },
      {
        "name": "setChildName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChildXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultOverride",
        "parameterTypes": [
          "io.nop.xlang.xdef.XDefOverride"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGetter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ObjPropKind"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapToProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObjMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPublished",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setSetter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTransformIn",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setTransformOut",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlPos",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNodeValuePosition"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjPropMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "keySet_props",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjSchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getChildrenProp",
        "parameterTypes": []
      },
      {
        "name": "getIsLeafProp",
        "parameterTypes": []
      },
      {
        "name": "getLevelProp",
        "parameterTypes": []
      },
      {
        "name": "getParentProp",
        "parameterTypes": []
      },
      {
        "name": "getRootLevelValue",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setChildrenProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsLeafProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRootLevelValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjTreeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefResolved",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getMandatory",
        "parameterTypes": []
      },
      {
        "name": "getReadonly",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isHideLabel",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setHideLabel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "forEachLayoutCell",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getFirstTable",
        "parameterTypes": []
      },
      {
        "name": "getGroups",
        "parameterTypes": []
      },
      {
        "name": "getLayoutCells",
        "parameterTypes": []
      },
      {
        "name": "isSimpleTable",
        "parameterTypes": []
      },
      {
        "name": "setGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutRowModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRow",
        "parameterTypes": [
          "io.nop.xlang.xmeta.layout.LayoutRowModel"
        ]
      },
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "boolean",
          "boolean",
          "int"
        ]
      },
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "forEachLayoutCell",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoId",
        "parameterTypes": []
      },
      {
        "name": "isFoldable",
        "parameterTypes": []
      },
      {
        "name": "isFolded",
        "parameterTypes": []
      },
      {
        "name": "isSimple",
        "parameterTypes": []
      },
      {
        "name": "newRow",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoId",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCols",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFoldable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFolded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutTableModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "baseLoc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "packageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeAliases"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeCache"
      }
    ],
    "methods": [
      {
        "name": "addTypeAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "buildClassType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "java.lang.String"
        ]
      },
      {
        "name": "buildLoc",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable"
        ]
      },
      {
        "name": "buildReferenceType",
        "parameterTypes": [
          "org.codehaus.janino.Java$ReferenceType"
        ]
      },
      {
        "name": "buildType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Type"
        ]
      },
      {
        "name": "buildTypes",
        "parameterTypes": [
          "[Lorg.codehaus.janino.Java$Type;"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotation",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotatable",
          "java.lang.String"
        ]
      },
      {
        "name": "parseAnnotationValue",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotation",
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "resolveAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Located",
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTypeResolver",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JaninoParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildTypeReference",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "resolveRef",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JavaObjMetaParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "node"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "renderer"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xpl.XplSlotType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.impl.XplTaskLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.HtmlXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.NoneXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.loader.XplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildFullTagName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamespaceFromLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamespaceFromTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDefaultNs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadLib",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplLibHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFunctionModel",
        "parameterTypes": []
      },
      {
        "name": "getTagCompiler",
        "parameterTypes": []
      },
      {
        "name": "getTagFuncName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTagCompiler",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplLibTagCompiler"
        ]
      },
      {
        "name": "setTagFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultNamespace",
        "parameterTypes": []
      },
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setDefaultNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSlotFuncName",
        "parameterTypes": []
      },
      {
        "name": "setSlotFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "addSlot",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getBodyType",
        "parameterTypes": []
      },
      {
        "name": "getCallLocationVar",
        "parameterTypes": []
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExample",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagReturn",
        "parameterTypes": []
      },
      {
        "name": "getTransformer",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "hasSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSlots",
        "parameterTypes": []
      },
      {
        "name": "isConditionTag",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownAttrs",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "keySet_slots",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setCallLocationVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setConditionTag",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExample",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setIgnoreUnknownAttrs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagReturn",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagReturn"
        ]
      },
      {
        "name": "setTransformer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOptional",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "hasTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasTags",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlotType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlotType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiDisplayMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiFormCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCellCount",
        "parameterTypes": []
      },
      {
        "name": "getTables",
        "parameterTypes": []
      },
      {
        "name": "loadObjMeta",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xui.model.UiFormModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiGridColModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "containsBreakpoint",
        "parameterTypes": []
      },
      {
        "name": "loadObjMeta",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xui.model.UiGridModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xui.model.UiRefViewModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCharCase",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getControl",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getDisabledOn",
        "parameterTypes": []
      },
      {
        "name": "getDisplayProp",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getEditMode",
        "parameterTypes": []
      },
      {
        "name": "getFilterOp",
        "parameterTypes": []
      },
      {
        "name": "getGenControl",
        "parameterTypes": []
      },
      {
        "name": "getHint",
        "parameterTypes": []
      },
      {
        "name": "getHref",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getIf",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getMatchRegex",
        "parameterTypes": []
      },
      {
        "name": "getMatchRegexp",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinRows",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholder",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": []
      },
      {
        "name": "getReadonlyOn",
        "parameterTypes": []
      },
      {
        "name": "getRequiredOn",
        "parameterTypes": []
      },
      {
        "name": "getSelectFirst",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getSourceUrl",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUploadUrl",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getView",
        "parameterTypes": []
      },
      {
        "name": "getVisibleOn",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "hasValidator",
        "parameterTypes": []
      },
      {
        "name": "isCustom",
        "parameterTypes": []
      },
      {
        "name": "isJoinValues",
        "parameterTypes": []
      },
      {
        "name": "isMultiValue",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCharCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCustom",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisabledOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterOp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenControl",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHref",
        "parameterTypes": [
          "io.nop.xui.model.UiHrefModel"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJoinValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMatchRegex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMatchRegexp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinRows",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultiValue",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPlaceholder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonlyOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setSourceUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUploadUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setView",
        "parameterTypes": [
          "io.nop.xui.model.UiRefViewModel"
        ]
      },
      {
        "name": "setVisibleOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiDisplayMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCollapseTitle",
        "parameterTypes": []
      },
      {
        "name": "getMandatory",
        "parameterTypes": []
      },
      {
        "name": "getReadonly",
        "parameterTypes": []
      },
      {
        "name": "getSubmitOnChange",
        "parameterTypes": []
      },
      {
        "name": "getTitlePosition",
        "parameterTypes": []
      },
      {
        "name": "isNotSubmit",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCollapseTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNotSubmit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmitOnChange",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTitlePosition",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiFormCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addCell",
        "parameterTypes": [
          "io.nop.xui.model.UiFormCellModel"
        ]
      },
      {
        "name": "addRule",
        "parameterTypes": [
          "io.nop.xui.model.UiFormRuleModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApi",
        "parameterTypes": []
      },
      {
        "name": "getAsyncApi",
        "parameterTypes": []
      },
      {
        "name": "getBodyClassName",
        "parameterTypes": []
      },
      {
        "name": "getCanAccessSuperData",
        "parameterTypes": []
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getCheckInterval",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getEditMode",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getInheritData",
        "parameterTypes": []
      },
      {
        "name": "getInitApi",
        "parameterTypes": []
      },
      {
        "name": "getInitAsyncApi",
        "parameterTypes": []
      },
      {
        "name": "getInitCheckInterval",
        "parameterTypes": []
      },
      {
        "name": "getInitFetch",
        "parameterTypes": []
      },
      {
        "name": "getInitFetchOn",
        "parameterTypes": []
      },
      {
        "name": "getInterval",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelAlign",
        "parameterTypes": []
      },
      {
        "name": "getLabelWidth",
        "parameterTypes": []
      },
      {
        "name": "getLayout",
        "parameterTypes": []
      },
      {
        "name": "getLayoutControl",
        "parameterTypes": []
      },
      {
        "name": "getLayoutMode",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getPanelClassName",
        "parameterTypes": []
      },
      {
        "name": "getPersistData",
        "parameterTypes": []
      },
      {
        "name": "getPersistDataKeys",
        "parameterTypes": []
      },
      {
        "name": "getPreventEnterSubmit",
        "parameterTypes": []
      },
      {
        "name": "getPromptPageLeave",
        "parameterTypes": []
      },
      {
        "name": "getRedirect",
        "parameterTypes": []
      },
      {
        "name": "getReload",
        "parameterTypes": []
      },
      {
        "name": "getRenderer",
        "parameterTypes": []
      },
      {
        "name": "getResetAfterSubmit",
        "parameterTypes": []
      },
      {
        "name": "getRule",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRules",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getSilentPolling",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getStopAutoRefreshWhen",
        "parameterTypes": []
      },
      {
        "name": "getSubmitOnChange",
        "parameterTypes": []
      },
      {
        "name": "getSubmitOnInit",
        "parameterTypes": []
      },
      {
        "name": "getSubmitText",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getWrapWithPanel",
        "parameterTypes": []
      },
      {
        "name": "hasApi",
        "parameterTypes": []
      },
      {
        "name": "hasAsyncApi",
        "parameterTypes": []
      },
      {
        "name": "hasCell",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasCells",
        "parameterTypes": []
      },
      {
        "name": "hasData",
        "parameterTypes": []
      },
      {
        "name": "hasInitApi",
        "parameterTypes": []
      },
      {
        "name": "hasInitAsyncApi",
        "parameterTypes": []
      },
      {
        "name": "hasRule",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRules",
        "parameterTypes": []
      },
      {
        "name": "keySet_cells",
        "parameterTypes": []
      },
      {
        "name": "keySet_rules",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAsyncApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setBodyClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCanAccessSuperData",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCells",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEditMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInheritData",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitAsyncApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitCheckInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setInitFetch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitFetchOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabelAlign",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabelWidth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLayout",
        "parameterTypes": [
          "io.nop.xlang.xmeta.layout.LayoutModel"
        ]
      },
      {
        "name": "setLayoutControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLayoutMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObjMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPanelClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersistData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersistDataKeys",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPreventEnterSubmit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPromptPageLeave",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRedirect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReload",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenderer",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setResetAfterSubmit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRules",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setSilentPolling",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStopAutoRefreshWhen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubmitOnChange",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmitOnInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmitText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWrapWithPanel",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiFormModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlign",
        "parameterTypes": []
      },
      {
        "name": "getBreakpoint",
        "parameterTypes": []
      },
      {
        "name": "getFixed",
        "parameterTypes": []
      },
      {
        "name": "getGroupName",
        "parameterTypes": []
      },
      {
        "name": "getLabelClassName",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isSortable",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlign",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBreakpoint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiGridColModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addCol",
        "parameterTypes": [
          "io.nop.xui.model.UiGridColModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAffixHeader",
        "parameterTypes": []
      },
      {
        "name": "getAffixRow",
        "parameterTypes": []
      },
      {
        "name": "getAffixRowClassName",
        "parameterTypes": []
      },
      {
        "name": "getAffixRowClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getApi",
        "parameterTypes": []
      },
      {
        "name": "getCheckOnItemClick",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getCol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getColumnNum",
        "parameterTypes": []
      },
      {
        "name": "getCombineFromIndex",
        "parameterTypes": []
      },
      {
        "name": "getCombineNum",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEditMode",
        "parameterTypes": []
      },
      {
        "name": "getFiler",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getFooterClassName",
        "parameterTypes": []
      },
      {
        "name": "getHeaderClassName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getInitApi",
        "parameterTypes": []
      },
      {
        "name": "getItemCheckableOn",
        "parameterTypes": []
      },
      {
        "name": "getMultiple",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholder",
        "parameterTypes": []
      },
      {
        "name": "getPrefixRow",
        "parameterTypes": []
      },
      {
        "name": "getPrefixRowClassName",
        "parameterTypes": []
      },
      {
        "name": "getPrefixRowClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getRowClassName",
        "parameterTypes": []
      },
      {
        "name": "getRowClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getSaveOrderApi",
        "parameterTypes": []
      },
      {
        "name": "getSelectable",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getSortable",
        "parameterTypes": []
      },
      {
        "name": "getStopAutoRefreshWhen",
        "parameterTypes": []
      },
      {
        "name": "getToolbarClassName",
        "parameterTypes": []
      },
      {
        "name": "hasApi",
        "parameterTypes": []
      },
      {
        "name": "hasCol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasCols",
        "parameterTypes": []
      },
      {
        "name": "hasInitApi",
        "parameterTypes": []
      },
      {
        "name": "hasSaveOrderApi",
        "parameterTypes": []
      },
      {
        "name": "keySet_cols",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAffixHeader",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAffixRow",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAffixRowClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAffixRowClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckOnItemClick",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCols",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setColumnNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCombineFromIndex",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCombineNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFiler",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setFooterClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeaderClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setItemCheckableOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setObjMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlaceholder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefixRow",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPrefixRowClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefixRowClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveOrderApi",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setSelectable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStopAutoRefreshWhen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToolbarClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiGridModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getButtonLabel",
        "parameterTypes": []
      },
      {
        "name": "getForm",
        "parameterTypes": []
      },
      {
        "name": "getGrid",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setButtonLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGrid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiRefViewModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "getControlTag",
        "parameterTypes": [
          "io.nop.xlang.xpl.IXplTagLib",
          "io.nop.xui.model.IUiDisplayMeta",
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta",
          "java.lang.String"
        ]
      },
      {
        "name": "getControlTag",
        "parameterTypes": [
          "io.nop.xlang.xpl.IXplTagLib",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getFormProps",
        "parameterTypes": [
          "io.nop.xui.model.UiFormModel",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getFormSelection",
        "parameterTypes": [
          "io.nop.xui.model.UiFormModel",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getListSelection",
        "parameterTypes": [
          "io.nop.xui.model.UiGridModel",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getRefBizObjName",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta"
        ]
      },
      {
        "name": "getRelationPickerUrl",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getRelationProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "isRelationProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta"
        ]
      }
    ],
    "name": "io.nop.xui.utils.XuiHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.io.Serializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "booleanValue",
        "parameterTypes": []
      },
      {
        "name": "compare",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "logicalAnd",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalOr",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalXor",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "parseBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "java.lang.Comparable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Enum"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "ordinal",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Enum",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.Exception",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Iterable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Object",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.RuntimeException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CASE_INSENSITIVE_ORDER"
      }
    ],
    "methods": [
      {
        "name": "charAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "chars",
        "parameterTypes": []
      },
      {
        "name": "codePointAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointBefore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointCount",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "codePoints",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "compareToIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.StringBuffer"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "endsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equalsIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.util.Locale",
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "formatted",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": []
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "int",
          "int",
          "[B",
          "int"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getChars",
        "parameterTypes": [
          "int",
          "int",
          "[C",
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "intern",
        "parameterTypes": []
      },
      {
        "name": "isBlank",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[Ljava.lang.CharSequence;"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "lines",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "offsetByCodePoints",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "boolean",
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "char",
          "char"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFirst",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveConstantDesc",
        "parameterTypes": [
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": []
      },
      {
        "name": "stripIndent",
        "parameterTypes": []
      },
      {
        "name": "stripLeading",
        "parameterTypes": []
      },
      {
        "name": "stripTrailing",
        "parameterTypes": []
      },
      {
        "name": "subSequence",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toCharArray",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "translateEscapes",
        "parameterTypes": []
      },
      {
        "name": "trim",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "java.lang.String",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSuppressed",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fillInStackTrace",
        "parameterTypes": []
      },
      {
        "name": "getCause",
        "parameterTypes": []
      },
      {
        "name": "getLocalizedMessage",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getStackTrace",
        "parameterTypes": []
      },
      {
        "name": "getSuppressed",
        "parameterTypes": []
      },
      {
        "name": "initCause",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "printStackTrace",
        "parameterTypes": []
      },
      {
        "name": "printStackTrace",
        "parameterTypes": [
          "java.io.PrintStream"
        ]
      },
      {
        "name": "printStackTrace",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setStackTrace",
        "parameterTypes": [
          "[Ljava.lang.StackTraceElement;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Throwable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "annotationType",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.annotation.Annotation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "describeConstable",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.constant.Constable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.reflect.Type",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractCollection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "java.util.AbstractList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "java.util.AbstractSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ensureCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.UnaryOperator"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trimToSize",
        "parameterTypes": []
      }
    ],
    "name": "java.util.ArrayList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Collection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.Collections$EmptyMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "compute",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "computeIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "computeIfPresent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "putIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.HashMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.HashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.List",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "entry",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ofEntries",
        "parameterTypes": [
          "[Ljava.util.Map$Entry;"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.Map",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Set",
    "unsafeAllocated": false
  }
]